ARM GAS  /tmp/ccijsw6o.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"stm32u5xx_hal_flash.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c"
  21              		.section	.text.FLASH_Program_QuadWord,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	FLASH_Program_QuadWord:
  28              	.LVL0:
  29              	.LFB169:
   1:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
   2:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   ******************************************************************************
   3:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @file    stm32u5xx_hal_flash.c
   4:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @author  MCD Application Team
   5:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *           + Program operations functions
   9:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *           + Memory Control functions
  10:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *
  12:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   ******************************************************************************
  13:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @attention
  14:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *
  15:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * Copyright (c) 2021 STMicroelectronics.
  16:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * All rights reserved.
  17:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *
  18:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * in the root directory of this software component.
  20:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *
  22:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   ******************************************************************************
  23:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****  @verbatim
  24:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   ==============================================================================
  25:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  26:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   ==============================================================================
  27:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  28:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB C-Bus accesses to the Flash memory.
  29:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****        It implements the erase and program Flash memory operations and the read
ARM GAS  /tmp/ccijsw6o.s 			page 2


  30:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****      and write protection mechanisms.
  31:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  32:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   [..] The Flash memory interface implements the TrustZone security features (TZ) supported
  33:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****        by ARM Cortex-M33 core (CM33).
  34:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  35:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   [..] The FLASH main features are:
  36:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       (+) Flash memory read operations
  37:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       (+) Flash memory program/erase operations
  38:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       (+) Read / write protections
  39:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       (+) Option bytes programming
  40:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     (+) TrustZone aware
  41:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     (+) Watermark-based area protection including the secure hide area
  42:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     (+) Block-based page protection
  43:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 137-bits word
  44:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****           (9 bits added per quad-word)
  45:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  46:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                         ##### How to use this driver #####
  47:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****  ==============================================================================
  48:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     [..]
  49:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  50:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       memory of all STM32U5xx devices.
  51:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  52:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       (#) Flash Memory IO Programming functions:
  53:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  54:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  55:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****            (++) Program functions: quad-words and burst program (8 quad-words)
  56:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****            (++) There are two modes of programming :
  57:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  58:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  59:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  60:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       (#) Interrupts and flags management functions :
  61:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  62:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  63:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  64:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  65:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****            (++) Get error flag status by calling HAL_GetError()
  66:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  67:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       (#) Option bytes management functions :
  68:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  69:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  70:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_Launch() function.
  71:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                 In this case, a reset is generated
  72:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  73:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     [..]
  74:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  75:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       to handle the following operations:
  76:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****        (+) Set the latency
  77:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****        (+) Enable/Disable the Flash power-down during low-power run and sleep modes
  78:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****        (+) Enable/Disable the Flash interrupts
  79:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****        (+) Monitor the Flash flags status
  80:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  81:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****  @endverbatim
  82:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   ******************************************************************************
  83:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
  84:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  85:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  86:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #include "stm32u5xx_hal.h"
ARM GAS  /tmp/ccijsw6o.s 			page 3


  87:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  88:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /** @addtogroup STM32U5xx_HAL_Driver
  89:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @{
  90:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
  91:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  92:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /** @defgroup FLASH FLASH
  93:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief FLASH HAL module driver
  94:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @{
  95:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
  96:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  97:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  98:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
  99:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 100:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /* Private defines -----------------------------------------------------------*/
 101:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /* Private macros ------------------------------------------------------------*/
 102:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 103:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /** @defgroup FLASH_Private_Variables FLASH Private Variables
 104:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @{
 105:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 106:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 107:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Variable used for Program/Erase sectors under interruption
 108:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 109:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash = {.Lock = HAL_UNLOCKED, \
 110:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                                .ErrorCode = HAL_FLASH_ERROR_NONE, \
 111:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                                .ProcedureOnGoing = 0U, \
 112:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                                .Address = 0U, \
 113:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                                .Bank = FLASH_BANK_1, \
 114:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                                .Page = 0U, \
 115:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                                .NbPagesToErase = 0U
 116:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                               };
 117:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 118:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @}
 119:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 120:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 121:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 122:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /** @defgroup FLASH_Private_Functions FLASH Private Functions
 123:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @{
 124:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 125:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** static void          FLASH_Program_QuadWord(uint32_t Address, uint32_t DataAddress);
 126:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** static void          FLASH_Program_Burst(uint32_t Address, uint32_t DataAddress);
 127:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 128:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @}
 129:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 130:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 131:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /* Exported functions --------------------------------------------------------*/
 132:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
 133:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @{
 134:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 135:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 136:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 137:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *  @brief   Programming operation functions
 138:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *
 139:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** @verbatim
 140:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****  ===============================================================================
 141:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                   ##### Programming operation functions #####
 142:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****  ===============================================================================
 143:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     [..]
ARM GAS  /tmp/ccijsw6o.s 			page 4


 144:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 145:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     program operations.
 146:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 147:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** @endverbatim
 148:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @{
 149:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 150:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 151:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 152:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Program a quad-word or a burst of 8 quad-words at a specified address.
 153:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 154:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *                      This parameter can be a value of @ref FLASH_Type_Program
 155:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  Address  specifies the address to be programmed.
 156:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *         This parameter shall be aligned to the Flash word (128 bits)
 157:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  DataAddress specifies the address of data to be programmed.
 158:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *         This parameter shall be 32-bit aligned
 159:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *
 160:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval HAL Status
 161:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 162:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint32_t DataAddress)
 163:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 164:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 165:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
 166:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 167:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Check the parameters */
 168:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 169:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 170:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Process Locked */
 171:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 172:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 173:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Reset error code */
 174:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 175:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 176:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Wait for last operation to be completed */
 177:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 178:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 179:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (status == HAL_OK)
 180:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 181:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Set current operation type */
 182:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     pFlash.ProcedureOnGoing = TypeProgram;
 183:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 184:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Access to SECCR or NSCR depends on operation type */
 185:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     reg_cr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 186:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 187:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if ((TypeProgram & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEPROGRAM_QUADWORD)
 188:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 189:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       /* Program a quad-word (128-bit) at a specified address */
 190:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       FLASH_Program_QuadWord(Address, DataAddress);
 191:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 192:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     else
 193:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 194:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       /* Program a burst of 8 quad-words at a specified address */
 195:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       FLASH_Program_Burst(Address, DataAddress);
 196:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 197:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 198:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Wait for last operation to be completed */
 199:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 200:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
ARM GAS  /tmp/ccijsw6o.s 			page 5


 201:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* If the program operation is completed, disable the PG (and BWR Bit in Burst programming mode
 202:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     CLEAR_BIT((*reg_cr), (TypeProgram & ~(FLASH_NON_SECURE_MASK)));
 203:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 204:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 205:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Process Unlocked */
 206:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 207:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 208:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* return status */
 209:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return status;
 210:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 211:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 212:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 213:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Program a quad-word or a burst of 8 quad-words at a specified address with interrupt en
 214:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 215:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *                      This parameter can be a value of @ref FLASH_Type_Program
 216:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  Address  specifies the address to be programmed.
 217:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *         This parameter shall be aligned to the Flash word (128 bits)
 218:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  DataAddress specifies the address of data to be programmed.
 219:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *         This parameter shall be 32-bit aligned
 220:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *
 221:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval HAL Status
 222:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 223:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint32_t DataAddress
 224:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 225:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 226:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
 227:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 228:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Check the parameters */
 229:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 230:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 231:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Process Locked */
 232:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 233:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 234:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Reset error code */
 235:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 236:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 237:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Wait for last operation to be completed */
 238:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 239:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 240:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (status != HAL_OK)
 241:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 242:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Process Unlocked */
 243:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 244:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 245:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   else
 246:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 247:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Set internal variables used by the IRQ handler */
 248:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     pFlash.ProcedureOnGoing = TypeProgram;
 249:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     pFlash.Address = Address;
 250:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 251:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Access to SECCR or NSCR depends on operation type */
 252:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     reg_cr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 253:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 254:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Enable End of Operation and Error interrupts */
 255:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     (*reg_cr) |= (FLASH_IT_EOP | FLASH_IT_OPERR);
 256:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 257:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if ((TypeProgram & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEPROGRAM_QUADWORD)
ARM GAS  /tmp/ccijsw6o.s 			page 6


 258:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 259:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       /* Program a quad-word (128-bit) at a specified address */
 260:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       FLASH_Program_QuadWord(Address, DataAddress);
 261:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 262:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     else
 263:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 264:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       /* Program a burst of 8 quad-words at a specified address */
 265:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       FLASH_Program_Burst(Address, DataAddress);
 266:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 267:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 268:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 269:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return status;
 270:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 271:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 272:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 273:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Handle FLASH interrupt request.
 274:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval None
 275:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 276:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 277:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 278:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t param = 0U;
 279:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t error;
 280:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
 281:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_sr;
 282:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 283:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Access to CR and SR registers depends on operation type */
 284:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   reg_cr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 285:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   reg_sr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECSR) : &(FLASH_NS->NSSR);
 286:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 287:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Save Flash errors */
 288:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   error = (*reg_sr) & FLASH_FLAG_SR_ERRORS;
 289:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 290:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   error |= (FLASH->NSSR & FLASH_FLAG_OPTWERR);
 291:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */
 292:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 293:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Set parameter of the callback */
 294:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if ((pFlash.ProcedureOnGoing & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEERASE_PAGES)
 295:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 296:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     param = pFlash.Page;
 297:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 298:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   else if ((pFlash.ProcedureOnGoing & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEERASE_MASSERASE)
 299:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 300:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     param = pFlash.Bank;
 301:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 302:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   else if ((pFlash.ProcedureOnGoing & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEPROGRAM_QUADWORD)
 303:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 304:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     param = pFlash.Address;
 305:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 306:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   else if ((pFlash.ProcedureOnGoing & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEPROGRAM_BURST)
 307:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 308:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     param = pFlash.Address;
 309:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 310:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   else
 311:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 312:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Empty statement (to be compliant MISRA 15.7) */
 313:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 314:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
ARM GAS  /tmp/ccijsw6o.s 			page 7


 315:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Clear operation bit on the on-going procedure */
 316:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   CLEAR_BIT((*reg_cr), (pFlash.ProcedureOnGoing & ~(FLASH_NON_SECURE_MASK)));
 317:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 318:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Check FLASH operation error flags */
 319:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (error != 0U)
 320:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 321:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Save the error code */
 322:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     pFlash.ErrorCode |= error;
 323:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 324:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Clear error programming flags */
 325:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     (*reg_sr) = error;
 326:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 327:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if ((error & FLASH_FLAG_OPTWERR) != 0U)
 328:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 329:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       FLASH->NSSR = FLASH_FLAG_OPTWERR;
 330:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 331:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */
 332:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 333:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Stop the procedure ongoing */
 334:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     pFlash.ProcedureOnGoing = 0U;
 335:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 336:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 337:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(param);
 338:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 339:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 340:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 341:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (((*reg_sr) & FLASH_FLAG_EOP) != 0U)
 342:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 343:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 344:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     (*reg_sr) = FLASH_FLAG_EOP;
 345:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 346:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if ((pFlash.ProcedureOnGoing & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEERASE_PAGES)
 347:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 348:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       /* Nb of pages to erase can be decreased */
 349:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       pFlash.NbPagesToErase--;
 350:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 351:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       /* Check if there are still pages to erase */
 352:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       if (pFlash.NbPagesToErase != 0U)
 353:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       {
 354:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         /* Increment page number */
 355:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         pFlash.Page++;
 356:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         FLASH_PageErase(pFlash.Page, pFlash.Bank);
 357:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       }
 358:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       else
 359:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       {
 360:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         /* No more pages to Erase */
 361:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         pFlash.ProcedureOnGoing = 0U;
 362:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         param = 0xFFFFFFFFU;
 363:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       }
 364:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 365:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     else
 366:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 367:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       /*Clear the procedure ongoing*/
 368:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       pFlash.ProcedureOnGoing = 0U;
 369:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 370:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 371:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* FLASH EOP interrupt user callback */
ARM GAS  /tmp/ccijsw6o.s 			page 8


 372:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     HAL_FLASH_EndOfOperationCallback(param);
 373:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 374:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 375:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (pFlash.ProcedureOnGoing == 0U)
 376:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 377:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Disable End of Operation and Error interrupts */
 378:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     (*reg_cr) &= ~(FLASH_IT_EOP | FLASH_IT_OPERR);
 379:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 380:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Process Unlocked */
 381:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 382:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 383:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 384:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 385:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 386:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback.
 387:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 388:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *                  Mass Erase: Bank number which has been requested to erase
 389:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *                  Page Erase: Page which has been erased
 390:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *                    (if 0xFFFFFFFF, it means that all the selected pages have been erased)
 391:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *                  Program: Address which was selected for data program
 392:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval None
 393:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 394:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 395:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 396:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 397:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   UNUSED(ReturnValue);
 398:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 399:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 400:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 401:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****    */
 402:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 403:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 404:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 405:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback.
 406:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 407:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *                 Mass Erase: Bank number which has been requested to erase
 408:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *                 Page Erase: Page number which returned an error
 409:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *                 Program: Address which was selected for data program
 410:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval None
 411:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 412:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 413:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 414:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 415:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   UNUSED(ReturnValue);
 416:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 417:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 418:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 419:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****    */
 420:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 421:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 422:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 423:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @}
 424:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 425:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 426:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 427:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *  @brief   Management functions
 428:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *
ARM GAS  /tmp/ccijsw6o.s 			page 9


 429:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** @verbatim
 430:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****  ===============================================================================
 431:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 432:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****  ===============================================================================
 433:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     [..]
 434:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 435:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     memory operations.
 436:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 437:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** @endverbatim
 438:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @{
 439:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 440:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 441:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 442:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Unlock the FLASH control register access.
 443:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval HAL Status
 444:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 445:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 446:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 447:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 448:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 449:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (READ_BIT(FLASH->NSCR, FLASH_NSCR_LOCK) != 0U)
 450:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 451:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 452:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     WRITE_REG(FLASH->NSKEYR, FLASH_KEY1);
 453:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     WRITE_REG(FLASH->NSKEYR, FLASH_KEY2);
 454:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 455:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* verify Flash is unlocked */
 456:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if (READ_BIT(FLASH->NSCR, FLASH_NSCR_LOCK) != 0U)
 457:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 458:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       status = HAL_ERROR;
 459:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 460:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 461:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 462:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 463:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (status == HAL_OK)
 464:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 465:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if (READ_BIT(FLASH->SECCR, FLASH_SECCR_LOCK) != 0U)
 466:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 467:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       /* Authorize the FLASH Registers access */
 468:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       WRITE_REG(FLASH->SECKEYR, FLASH_KEY1);
 469:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       WRITE_REG(FLASH->SECKEYR, FLASH_KEY2);
 470:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 471:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       /* verify Flash is unlocked */
 472:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       if (READ_BIT(FLASH->SECCR, FLASH_SECCR_LOCK) != 0U)
 473:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       {
 474:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         status = HAL_ERROR;
 475:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       }
 476:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 477:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 478:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */
 479:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 480:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return status;
 481:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 482:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 483:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 484:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Lock the FLASH control register access.
 485:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval HAL Status
ARM GAS  /tmp/ccijsw6o.s 			page 10


 486:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 487:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 488:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 489:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 490:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 491:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 492:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   SET_BIT(FLASH->NSCR, FLASH_NSCR_LOCK);
 493:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 494:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* verify Flash is locked */
 495:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (READ_BIT(FLASH->NSCR, FLASH_NSCR_LOCK) != 0U)
 496:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 497:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     status = HAL_OK;
 498:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 499:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 500:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 501:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (status == HAL_OK)
 502:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 503:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     SET_BIT(FLASH->SECCR, FLASH_SECCR_LOCK);
 504:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 505:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* verify Flash is locked */
 506:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if (READ_BIT(FLASH->SECCR, FLASH_SECCR_LOCK) != 0U)
 507:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 508:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       status = HAL_OK;
 509:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 510:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 511:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */
 512:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 513:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return status;
 514:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 515:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 516:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 517:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Bytes Registers access.
 518:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval HAL Status
 519:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 520:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 521:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 522:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (READ_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK) != 0U)
 523:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 524:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 525:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY1);
 526:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 527:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 528:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Verify that the Option Bytes are unlocked */
 529:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if (READ_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK) != 0U)
 530:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 531:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       return HAL_ERROR;
 532:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 533:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 534:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 535:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return HAL_OK;
 536:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 537:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 538:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 539:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Lock the FLASH Option Bytes Registers access.
 540:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval HAL Status
 541:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 542:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
ARM GAS  /tmp/ccijsw6o.s 			page 11


 543:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 544:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 545:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   SET_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK);
 546:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 547:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Verify that the Option Bytes are locked */
 548:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (READ_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK) != 0U)
 549:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 550:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     return HAL_OK;
 551:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 552:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 553:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return HAL_ERROR;
 554:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 555:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 556:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 557:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Launch the option byte loading.
 558:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval HAL Status
 559:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 560:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 561:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 562:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 563:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   SET_BIT(FLASH->NSCR, FLASH_NSCR_OBL_LAUNCH);
 564:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 565:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* We should not reach here : Option byte launch generates Option byte reset
 566:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****      so return error */
 567:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return HAL_ERROR;
 568:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 569:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 570:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 571:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @}
 572:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 573:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 574:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 575:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *  @brief   Peripheral Errors functions
 576:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *
 577:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** @verbatim
 578:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****  ===============================================================================
 579:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 580:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****  ===============================================================================
 581:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     [..]
 582:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 583:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 584:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** @endverbatim
 585:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @{
 586:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 587:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 588:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 589:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 590:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval FLASH_ErrorCode The returned value can be:
 591:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_NONE: No error set
 592:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OP: FLASH Operation error
 593:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PROG: FLASH Programming error
 594:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP: FLASH Write protection error
 595:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGA: FLASH Programming alignment error
 596:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SIZ: FLASH Size error
 597:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS: FLASH Programming sequence error
 598:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPTW: FLASH Option modification error
 599:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
ARM GAS  /tmp/ccijsw6o.s 			page 12


 600:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 601:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 602:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return pFlash.ErrorCode;
 603:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 604:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 605:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 606:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @}
 607:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 608:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 609:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 610:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @}
 611:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 612:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 613:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 614:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 615:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 616:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @{
 617:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 618:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 619:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 620:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 621:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
 622:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval HAL Status
 623:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 624:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 625:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 626:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY and WDW flags to be reset.
 627:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY & WDW flags will be reset, and an error flag will 
 628:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 629:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t timeout = HAL_GetTick() + Timeout;
 630:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t error;
 631:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_sr;
 632:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 633:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Access to SECSR or NSSR registers depends on operation type */
 634:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   reg_sr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECSR) : &(FLASH_NS->NSSR);
 635:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 636:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   while (((*reg_sr) & (FLASH_FLAG_BSY | FLASH_FLAG_WDW)) != 0U)
 637:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 638:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if (Timeout != HAL_MAX_DELAY)
 639:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 640:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       if (HAL_GetTick() >= timeout)
 641:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       {
 642:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         return HAL_TIMEOUT;
 643:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       }
 644:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 645:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 646:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 647:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Check FLASH operation error flags */
 648:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   error = ((*reg_sr) & FLASH_FLAG_SR_ERRORS);
 649:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 650:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   error |= (FLASH->NSSR & FLASH_FLAG_OPTWERR);
 651:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */
 652:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 653:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (error != 0U)
 654:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 655:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /*Save the error code*/
 656:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     pFlash.ErrorCode |= error;
ARM GAS  /tmp/ccijsw6o.s 			page 13


 657:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 658:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Clear error programming flags */
 659:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     (*reg_sr) = error;
 660:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 661:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     if ((error & FLASH_FLAG_OPTWERR) != 0U)
 662:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 663:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       FLASH->NSSR = FLASH_FLAG_OPTWERR;
 664:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 665:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #endif /* __ARM_FEATURE_CMSE */
 666:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 667:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     return HAL_ERROR;
 668:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 669:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 670:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 671:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (((*reg_sr) & FLASH_FLAG_EOP) != 0U)
 672:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 673:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 674:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     (*reg_sr) = FLASH_FLAG_EOP;
 675:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 676:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 677:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* If there is no error flag set */
 678:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return HAL_OK;
 679:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 680:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 681:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 682:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Program a quad-word (128-bit) at a specified address.
 683:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 684:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  DataAddress specifies the address of data to be programmed.
 685:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval None
 686:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 687:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** static void FLASH_Program_QuadWord(uint32_t Address, uint32_t DataAddress)
 688:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
  30              		.loc 1 688 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 689:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint8_t index = 4;
  35              		.loc 1 689 3 view .LVU1
 690:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t *dest_addr = (uint32_t *)Address;
  36              		.loc 1 690 3 view .LVU2
 691:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t *src_addr  = (uint32_t *)DataAddress;
  37              		.loc 1 691 3 view .LVU3
 692:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t primask_bit;
  38              		.loc 1 692 3 view .LVU4
 693:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
  39              		.loc 1 693 3 view .LVU5
 694:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 695:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Check the parameters */
 696:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
  40              		.loc 1 696 3 view .LVU6
 697:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 698:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Access to SECCR or NSCR registers depends on operation type */
 699:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   reg_cr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
  41              		.loc 1 699 3 view .LVU7
 700:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 701:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Set PG bit */
ARM GAS  /tmp/ccijsw6o.s 			page 14


 702:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   SET_BIT((*reg_cr), FLASH_NSCR_PG);
  42              		.loc 1 702 3 view .LVU8
  43 0000 094A     		ldr	r2, .L3
  44 0002 936A     		ldr	r3, [r2, #40]
  45 0004 43F00103 		orr	r3, r3, #1
  46 0008 9362     		str	r3, [r2, #40]
 703:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 704:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Enter critical section: Disable interrupts to avoid any interruption during the loop */
 705:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   primask_bit = __get_PRIMASK();
  47              		.loc 1 705 3 view .LVU9
  48              	.LBB14:
  49              	.LBI14:
  50              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  /tmp/ccijsw6o.s 			page 15


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccijsw6o.s 			page 16


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  /tmp/ccijsw6o.s 			page 17


 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
ARM GAS  /tmp/ccijsw6o.s 			page 18


 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccijsw6o.s 			page 19


 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
ARM GAS  /tmp/ccijsw6o.s 			page 20


 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccijsw6o.s 			page 21


 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccijsw6o.s 			page 22


 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccijsw6o.s 			page 23


 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
ARM GAS  /tmp/ccijsw6o.s 			page 24


 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccijsw6o.s 			page 25


 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccijsw6o.s 			page 26


 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
ARM GAS  /tmp/ccijsw6o.s 			page 27


 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccijsw6o.s 			page 28


 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccijsw6o.s 			page 29


 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccijsw6o.s 			page 30


 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  /tmp/ccijsw6o.s 			page 31


 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 966:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 973:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 996:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ISB();
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1006:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1009:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
1011:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
1012:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1013:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccijsw6o.s 			page 32


1014:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
1015:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ISB();
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1019:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1020:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1033:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1034:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1036:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
1039:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
1040:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1044:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
1052:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1063:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1064:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccijsw6o.s 			page 33


1071:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1084:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1087:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1090:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1099:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
1100:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
1102:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1104:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1105:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1106:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
1108:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1110:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
1112:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
1114:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
1120:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
1121:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
1122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
1124:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
ARM GAS  /tmp/ccijsw6o.s 			page 34


1128:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
1135:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1138:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
1139:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1140:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
1143:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1146:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1147:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1148:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
1151:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1152:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1165:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
1166:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1170:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1173:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1174:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
1175:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
1176:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
1177:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1178:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
1179:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccijsw6o.s 			page 35


1185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1187:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1188:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
1191:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1194:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
1195:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1199:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
1202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
1203:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
  51              		.loc 2 1204 31 view .LVU10
  52              	.LBB15:
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  53              		.loc 2 1206 3 view .LVU11
1207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
  54              		.loc 2 1208 3 view .LVU12
  55              		.syntax unified
  56              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  57 000a EFF3108C 		MRS ip, primask
  58              	@ 0 "" 2
  59              	.LVL1:
1209:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  60              		.loc 2 1209 3 view .LVU13
  61              		.loc 2 1209 3 is_stmt 0 view .LVU14
  62              		.thumb
  63              		.syntax unified
  64              	.LBE15:
  65              	.LBE14:
 706:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __disable_irq();
  66              		.loc 1 706 3 is_stmt 1 view .LVU15
  67              	.LBB16:
  68              	.LBI16:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  69              		.loc 2 960 27 view .LVU16
  70              	.LBB17:
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  71              		.loc 2 962 3 view .LVU17
  72              		.syntax unified
  73              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  74 000e 72B6     		cpsid i
  75              	@ 0 "" 2
  76              		.thumb
  77              		.syntax unified
  78              	.LBE17:
  79              	.LBE16:
ARM GAS  /tmp/ccijsw6o.s 			page 36


 689:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t *dest_addr = (uint32_t *)Address;
  80              		.loc 1 689 11 is_stmt 0 view .LVU18
  81 0010 0423     		movs	r3, #4
  82              	.LVL2:
  83              	.L2:
 707:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 708:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Program the quad-word */
 709:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   do
  84              		.loc 1 709 3 is_stmt 1 discriminator 1 view .LVU19
 710:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 711:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     *dest_addr = *src_addr;
  85              		.loc 1 711 5 discriminator 1 view .LVU20
  86              		.loc 1 711 18 is_stmt 0 discriminator 1 view .LVU21
  87 0012 51F8042B 		ldr	r2, [r1], #4
  88              	.LVL3:
  89              		.loc 1 711 16 discriminator 1 view .LVU22
  90 0016 40F8042B 		str	r2, [r0], #4
  91              	.LVL4:
 712:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     dest_addr++;
  92              		.loc 1 712 5 is_stmt 1 discriminator 1 view .LVU23
 713:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     src_addr++;
  93              		.loc 1 713 5 discriminator 1 view .LVU24
 714:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     index--;
  94              		.loc 1 714 5 discriminator 1 view .LVU25
  95              		.loc 1 714 10 is_stmt 0 discriminator 1 view .LVU26
  96 001a 013B     		subs	r3, r3, #1
  97              	.LVL5:
 715:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   } while (index != 0U);
  98              		.loc 1 715 18 is_stmt 1 discriminator 1 view .LVU27
  99 001c 13F0FF03 		ands	r3, r3, #255
 100              	.LVL6:
 101              		.loc 1 715 18 is_stmt 0 discriminator 1 view .LVU28
 102 0020 F7D1     		bne	.L2
 716:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 717:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Exit critical section: restore previous priority mask */
 718:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __set_PRIMASK(primask_bit);
 103              		.loc 1 718 3 is_stmt 1 view .LVU29
 104              	.LVL7:
 105              	.LBB18:
 106              	.LBI18:
1210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1213:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
1216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
1217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
1218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
1220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
1224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1226:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccijsw6o.s 			page 37


1227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1228:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1229:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
1231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
1232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
1233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 107              		.loc 2 1234 27 view .LVU30
 108              	.LBB19:
1235:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1236:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 109              		.loc 2 1236 3 view .LVU31
 110              		.syntax unified
 111              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 112 0022 8CF31088 		MSR primask, ip
 113              	@ 0 "" 2
 114              	.LVL8:
 115              		.loc 2 1236 3 is_stmt 0 view .LVU32
 116              		.thumb
 117              		.syntax unified
 118              	.LBE19:
 119              	.LBE18:
 719:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 120              		.loc 1 719 1 view .LVU33
 121 0026 7047     		bx	lr
 122              	.L4:
 123              		.align	2
 124              	.L3:
 125 0028 00200240 		.word	1073881088
 126              		.cfi_endproc
 127              	.LFE169:
 129              		.section	.text.FLASH_Program_Burst,"ax",%progbits
 130              		.align	1
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 135              	FLASH_Program_Burst:
 136              	.LVL9:
 137              	.LFB170:
 720:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 721:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** /**
 722:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @brief  Program a burst of 8x quad-words at a specified address.
 723:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 724:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @param  DataAddress: specifies the address where the data are stored.
 725:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   * @retval None
 726:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   */
 727:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** static void FLASH_Program_Burst(uint32_t Address, uint32_t DataAddress)
 728:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** {
 138              		.loc 1 728 1 is_stmt 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 729:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint8_t burst_index = FLASH_NB_WORDS_IN_BURST;
 143              		.loc 1 729 3 view .LVU35
 730:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t *dest_addr = (uint32_t *)Address;
ARM GAS  /tmp/ccijsw6o.s 			page 38


 144              		.loc 1 730 3 view .LVU36
 731:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t *src_addr = (uint32_t *)DataAddress;
 145              		.loc 1 731 3 view .LVU37
 732:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t primask_bit;
 146              		.loc 1 732 3 view .LVU38
 733:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
 147              		.loc 1 733 3 view .LVU39
 734:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 735:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Check the parameters */
 736:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   assert_param(IS_FLASH_MAIN_MEM_ADDRESS(Address));
 148              		.loc 1 736 3 view .LVU40
 737:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 738:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Access to SECCR or NSCR registers depends on operation type */
 739:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   reg_cr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECCR) : &(FLASH_NS->NSCR);
 149              		.loc 1 739 3 view .LVU41
 740:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 741:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Set PG and BWR bits */
 742:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   SET_BIT((*reg_cr), (FLASH_NSCR_PG | FLASH_NSCR_BWR));
 150              		.loc 1 742 3 view .LVU42
 151 0000 0A4A     		ldr	r2, .L7
 152 0002 936A     		ldr	r3, [r2, #40]
 153 0004 43F48043 		orr	r3, r3, #16384
 154 0008 43F00103 		orr	r3, r3, #1
 155 000c 9362     		str	r3, [r2, #40]
 743:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 744:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Enter critical section: Disable interrupts to avoid any interruption during the loop */
 745:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   primask_bit = __get_PRIMASK();
 156              		.loc 1 745 3 view .LVU43
 157              	.LBB20:
 158              	.LBI20:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 159              		.loc 2 1204 31 view .LVU44
 160              	.LBB21:
1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 161              		.loc 2 1206 3 view .LVU45
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 162              		.loc 2 1208 3 view .LVU46
 163              		.syntax unified
 164              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 165 000e EFF3108C 		MRS ip, primask
 166              	@ 0 "" 2
 167              	.LVL10:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 168              		.loc 2 1209 3 view .LVU47
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 169              		.loc 2 1209 3 is_stmt 0 view .LVU48
 170              		.thumb
 171              		.syntax unified
 172              	.LBE21:
 173              	.LBE20:
 746:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __disable_irq();
 174              		.loc 1 746 3 is_stmt 1 view .LVU49
 175              	.LBB22:
 176              	.LBI22:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 177              		.loc 2 960 27 view .LVU50
 178              	.LBB23:
ARM GAS  /tmp/ccijsw6o.s 			page 39


 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 179              		.loc 2 962 3 view .LVU51
 180              		.syntax unified
 181              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 182 0012 72B6     		cpsid i
 183              	@ 0 "" 2
 184              		.thumb
 185              		.syntax unified
 186              	.LBE23:
 187              	.LBE22:
 729:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t *dest_addr = (uint32_t *)Address;
 188              		.loc 1 729 11 is_stmt 0 view .LVU52
 189 0014 2023     		movs	r3, #32
 190              	.LVL11:
 191              	.L6:
 747:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 748:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Program the burst */
 749:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   do
 192              		.loc 1 749 3 is_stmt 1 discriminator 1 view .LVU53
 750:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 751:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     *dest_addr = *src_addr;
 193              		.loc 1 751 5 discriminator 1 view .LVU54
 194              		.loc 1 751 18 is_stmt 0 discriminator 1 view .LVU55
 195 0016 51F8042B 		ldr	r2, [r1], #4
 196              	.LVL12:
 197              		.loc 1 751 16 discriminator 1 view .LVU56
 198 001a 40F8042B 		str	r2, [r0], #4
 199              	.LVL13:
 752:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     dest_addr++;
 200              		.loc 1 752 5 is_stmt 1 discriminator 1 view .LVU57
 753:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     src_addr++;
 201              		.loc 1 753 5 discriminator 1 view .LVU58
 754:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     burst_index--;
 202              		.loc 1 754 5 discriminator 1 view .LVU59
 203              		.loc 1 754 16 is_stmt 0 discriminator 1 view .LVU60
 204 001e 013B     		subs	r3, r3, #1
 205              	.LVL14:
 755:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   } while (burst_index != 0U);
 206              		.loc 1 755 24 is_stmt 1 discriminator 1 view .LVU61
 207 0020 13F0FF03 		ands	r3, r3, #255
 208              	.LVL15:
 209              		.loc 1 755 24 is_stmt 0 discriminator 1 view .LVU62
 210 0024 F7D1     		bne	.L6
 756:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 757:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Exit critical section: restore previous priority mask */
 758:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __set_PRIMASK(primask_bit);
 211              		.loc 1 758 3 is_stmt 1 view .LVU63
 212              	.LVL16:
 213              	.LBB24:
 214              	.LBI24:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215              		.loc 2 1234 27 view .LVU64
 216              	.LBB25:
 217              		.loc 2 1236 3 view .LVU65
 218              		.syntax unified
 219              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 220 0026 8CF31088 		MSR primask, ip
ARM GAS  /tmp/ccijsw6o.s 			page 40


 221              	@ 0 "" 2
 222              	.LVL17:
 223              		.loc 2 1236 3 is_stmt 0 view .LVU66
 224              		.thumb
 225              		.syntax unified
 226              	.LBE25:
 227              	.LBE24:
 759:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 228              		.loc 1 759 1 view .LVU67
 229 002a 7047     		bx	lr
 230              	.L8:
 231              		.align	2
 232              	.L7:
 233 002c 00200240 		.word	1073881088
 234              		.cfi_endproc
 235              	.LFE170:
 237              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 238              		.align	1
 239              		.weak	HAL_FLASH_EndOfOperationCallback
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	HAL_FLASH_EndOfOperationCallback:
 245              	.LVL18:
 246              	.LFB160:
 395:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 247              		.loc 1 395 1 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 397:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 252              		.loc 1 397 3 view .LVU69
 402:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 253              		.loc 1 402 1 is_stmt 0 view .LVU70
 254 0000 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE160:
 258              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 259              		.align	1
 260              		.weak	HAL_FLASH_OperationErrorCallback
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	HAL_FLASH_OperationErrorCallback:
 266              	.LVL19:
 267              	.LFB161:
 413:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 268              		.loc 1 413 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 415:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 273              		.loc 1 415 3 view .LVU72
 420:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 274              		.loc 1 420 1 is_stmt 0 view .LVU73
ARM GAS  /tmp/ccijsw6o.s 			page 41


 275 0000 7047     		bx	lr
 276              		.cfi_endproc
 277              	.LFE161:
 279              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 280              		.align	1
 281              		.global	HAL_FLASH_IRQHandler
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	HAL_FLASH_IRQHandler:
 287              	.LFB159:
 277:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t param = 0U;
 288              		.loc 1 277 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292 0000 10B5     		push	{r4, lr}
 293              	.LCFI0:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 4, -8
 296              		.cfi_offset 14, -4
 278:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t error;
 297              		.loc 1 278 3 view .LVU75
 298              	.LVL20:
 279:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
 299              		.loc 1 279 3 view .LVU76
 280:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_sr;
 300              		.loc 1 280 3 view .LVU77
 281:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 301              		.loc 1 281 3 view .LVU78
 284:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   reg_sr = IS_FLASH_SECURE_OPERATION() ? &(FLASH->SECSR) : &(FLASH_NS->NSSR);
 302              		.loc 1 284 3 view .LVU79
 285:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 303              		.loc 1 285 3 view .LVU80
 288:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 304              		.loc 1 288 3 view .LVU81
 288:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 305              		.loc 1 288 12 is_stmt 0 view .LVU82
 306 0002 344B     		ldr	r3, .L31
 307 0004 1A6A     		ldr	r2, [r3, #32]
 288:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 308              		.loc 1 288 9 view .LVU83
 309 0006 22F4F852 		bic	r2, r2, #7936
 310 000a 22F00502 		bic	r2, r2, #5
 311 000e 9204     		lsls	r2, r2, #18
 312 0010 920C     		lsrs	r2, r2, #18
 313              	.LVL21:
 294:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 314              		.loc 1 294 3 is_stmt 1 view .LVU84
 294:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 315              		.loc 1 294 14 is_stmt 0 view .LVU85
 316 0012 314B     		ldr	r3, .L31+4
 317 0014 9B68     		ldr	r3, [r3, #8]
 294:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 318              		.loc 1 294 32 view .LVU86
 319 0016 23F00043 		bic	r3, r3, #-2147483648
 294:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
ARM GAS  /tmp/ccijsw6o.s 			page 42


 320              		.loc 1 294 6 view .LVU87
 321 001a 022B     		cmp	r3, #2
 322 001c 0BD0     		beq	.L24
 298:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 323              		.loc 1 298 8 is_stmt 1 view .LVU88
 298:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 324              		.loc 1 298 11 is_stmt 0 view .LVU89
 325 001e 48F20401 		movw	r1, #32772
 326 0022 8B42     		cmp	r3, r1
 327 0024 2FD0     		beq	.L25
 302:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 328              		.loc 1 302 8 is_stmt 1 view .LVU90
 302:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 329              		.loc 1 302 11 is_stmt 0 view .LVU91
 330 0026 012B     		cmp	r3, #1
 331 0028 30D0     		beq	.L26
 306:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 332              		.loc 1 306 8 is_stmt 1 view .LVU92
 306:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 333              		.loc 1 306 11 is_stmt 0 view .LVU93
 334 002a 44F20101 		movw	r1, #16385
 335 002e 8B42     		cmp	r3, r1
 336 0030 2FD0     		beq	.L27
 278:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t error;
 337              		.loc 1 278 12 view .LVU94
 338 0032 0024     		movs	r4, #0
 339 0034 01E0     		b	.L13
 340              	.L24:
 296:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 341              		.loc 1 296 5 is_stmt 1 view .LVU95
 296:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 342              		.loc 1 296 11 is_stmt 0 view .LVU96
 343 0036 2849     		ldr	r1, .L31+4
 344 0038 4C69     		ldr	r4, [r1, #20]
 345              	.LVL22:
 346              	.L13:
 313:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 347              		.loc 1 313 3 is_stmt 1 view .LVU97
 316:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 348              		.loc 1 316 3 view .LVU98
 349 003a 2648     		ldr	r0, .L31
 350 003c 816A     		ldr	r1, [r0, #40]
 351 003e 21EA0303 		bic	r3, r1, r3
 352 0042 8362     		str	r3, [r0, #40]
 319:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 353              		.loc 1 319 3 view .LVU99
 319:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 354              		.loc 1 319 6 is_stmt 0 view .LVU100
 355 0044 42BB     		cbnz	r2, .L28
 356              	.LVL23:
 357              	.L16:
 341:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 358              		.loc 1 341 3 is_stmt 1 view .LVU101
 341:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 359              		.loc 1 341 9 is_stmt 0 view .LVU102
 360 0046 234B     		ldr	r3, .L31
 361 0048 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /tmp/ccijsw6o.s 			page 43


 341:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 362              		.loc 1 341 6 view .LVU103
 363 004a 13F0010F 		tst	r3, #1
 364 004e 0ED0     		beq	.L17
 344:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 365              		.loc 1 344 5 is_stmt 1 view .LVU104
 344:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 366              		.loc 1 344 15 is_stmt 0 view .LVU105
 367 0050 204B     		ldr	r3, .L31
 368 0052 0122     		movs	r2, #1
 369 0054 1A62     		str	r2, [r3, #32]
 346:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 370              		.loc 1 346 5 is_stmt 1 view .LVU106
 346:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 371              		.loc 1 346 16 is_stmt 0 view .LVU107
 372 0056 204B     		ldr	r3, .L31+4
 373 0058 9B68     		ldr	r3, [r3, #8]
 346:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 374              		.loc 1 346 34 view .LVU108
 375 005a 23F00043 		bic	r3, r3, #-2147483648
 346:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 376              		.loc 1 346 8 view .LVU109
 377 005e 022B     		cmp	r3, #2
 378 0060 25D0     		beq	.L29
 368:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 379              		.loc 1 368 7 is_stmt 1 view .LVU110
 368:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 380              		.loc 1 368 31 is_stmt 0 view .LVU111
 381 0062 1D4B     		ldr	r3, .L31+4
 382 0064 0022     		movs	r2, #0
 383 0066 9A60     		str	r2, [r3, #8]
 384              	.LVL24:
 385              	.L20:
 372:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 386              		.loc 1 372 5 is_stmt 1 view .LVU112
 387 0068 2046     		mov	r0, r4
 388 006a FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 389              	.LVL25:
 390              	.L17:
 375:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 391              		.loc 1 375 3 view .LVU113
 375:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 392              		.loc 1 375 13 is_stmt 0 view .LVU114
 393 006e 1A4B     		ldr	r3, .L31+4
 394 0070 9B68     		ldr	r3, [r3, #8]
 375:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 395              		.loc 1 375 6 view .LVU115
 396 0072 3BB9     		cbnz	r3, .L11
 378:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 397              		.loc 1 378 5 is_stmt 1 view .LVU116
 378:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 398              		.loc 1 378 6 is_stmt 0 view .LVU117
 399 0074 174A     		ldr	r2, .L31
 400 0076 936A     		ldr	r3, [r2, #40]
 378:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 401              		.loc 1 378 15 view .LVU118
 402 0078 23F04073 		bic	r3, r3, #50331648
ARM GAS  /tmp/ccijsw6o.s 			page 44


 403 007c 9362     		str	r3, [r2, #40]
 381:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 404              		.loc 1 381 5 is_stmt 1 view .LVU119
 381:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 405              		.loc 1 381 5 view .LVU120
 406 007e 164B     		ldr	r3, .L31+4
 407 0080 0022     		movs	r2, #0
 408 0082 1A70     		strb	r2, [r3]
 381:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 409              		.loc 1 381 5 view .LVU121
 410              	.L11:
 383:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 411              		.loc 1 383 1 is_stmt 0 view .LVU122
 412 0084 10BD     		pop	{r4, pc}
 413              	.LVL26:
 414              	.L25:
 300:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 415              		.loc 1 300 5 is_stmt 1 view .LVU123
 300:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 416              		.loc 1 300 11 is_stmt 0 view .LVU124
 417 0086 1449     		ldr	r1, .L31+4
 418 0088 0C69     		ldr	r4, [r1, #16]
 419              	.LVL27:
 300:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 420              		.loc 1 300 11 view .LVU125
 421 008a D6E7     		b	.L13
 422              	.LVL28:
 423              	.L26:
 304:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 424              		.loc 1 304 5 is_stmt 1 view .LVU126
 304:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 425              		.loc 1 304 11 is_stmt 0 view .LVU127
 426 008c 1249     		ldr	r1, .L31+4
 427 008e CC68     		ldr	r4, [r1, #12]
 428              	.LVL29:
 304:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 429              		.loc 1 304 11 view .LVU128
 430 0090 D3E7     		b	.L13
 431              	.LVL30:
 432              	.L27:
 308:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 433              		.loc 1 308 5 is_stmt 1 view .LVU129
 308:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 434              		.loc 1 308 11 is_stmt 0 view .LVU130
 435 0092 1149     		ldr	r1, .L31+4
 436 0094 CC68     		ldr	r4, [r1, #12]
 437              	.LVL31:
 308:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 438              		.loc 1 308 11 view .LVU131
 439 0096 D0E7     		b	.L13
 440              	.L28:
 322:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 441              		.loc 1 322 5 is_stmt 1 view .LVU132
 322:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 442              		.loc 1 322 11 is_stmt 0 view .LVU133
 443 0098 0F4B     		ldr	r3, .L31+4
 444 009a 5968     		ldr	r1, [r3, #4]
ARM GAS  /tmp/ccijsw6o.s 			page 45


 322:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 445              		.loc 1 322 22 view .LVU134
 446 009c 1143     		orrs	r1, r1, r2
 447 009e 5960     		str	r1, [r3, #4]
 325:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 448              		.loc 1 325 5 is_stmt 1 view .LVU135
 325:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 449              		.loc 1 325 15 is_stmt 0 view .LVU136
 450 00a0 0262     		str	r2, [r0, #32]
 334:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 451              		.loc 1 334 5 is_stmt 1 view .LVU137
 334:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 452              		.loc 1 334 29 is_stmt 0 view .LVU138
 453 00a2 0022     		movs	r2, #0
 454              	.LVL32:
 334:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 455              		.loc 1 334 29 view .LVU139
 456 00a4 9A60     		str	r2, [r3, #8]
 337:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 457              		.loc 1 337 5 is_stmt 1 view .LVU140
 458 00a6 2046     		mov	r0, r4
 459              	.LVL33:
 337:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 460              		.loc 1 337 5 is_stmt 0 view .LVU141
 461 00a8 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 462              	.LVL34:
 337:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 463              		.loc 1 337 5 view .LVU142
 464 00ac CBE7     		b	.L16
 465              	.L29:
 349:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 466              		.loc 1 349 7 is_stmt 1 view .LVU143
 349:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 467              		.loc 1 349 13 is_stmt 0 view .LVU144
 468 00ae 0A4A     		ldr	r2, .L31+4
 469 00b0 9369     		ldr	r3, [r2, #24]
 349:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 470              		.loc 1 349 28 view .LVU145
 471 00b2 013B     		subs	r3, r3, #1
 472 00b4 9361     		str	r3, [r2, #24]
 352:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       {
 473              		.loc 1 352 7 is_stmt 1 view .LVU146
 352:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       {
 474              		.loc 1 352 10 is_stmt 0 view .LVU147
 475 00b6 2BB9     		cbnz	r3, .L30
 361:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         param = 0xFFFFFFFFU;
 476              		.loc 1 361 9 is_stmt 1 view .LVU148
 361:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         param = 0xFFFFFFFFU;
 477              		.loc 1 361 33 is_stmt 0 view .LVU149
 478 00b8 074B     		ldr	r3, .L31+4
 479 00ba 0022     		movs	r2, #0
 480 00bc 9A60     		str	r2, [r3, #8]
 362:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       }
 481              		.loc 1 362 9 is_stmt 1 view .LVU150
 482              	.LVL35:
 362:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       }
 483              		.loc 1 362 15 is_stmt 0 view .LVU151
ARM GAS  /tmp/ccijsw6o.s 			page 46


 484 00be 4FF0FF34 		mov	r4, #-1
 485 00c2 D1E7     		b	.L20
 486              	.LVL36:
 487              	.L30:
 355:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         FLASH_PageErase(pFlash.Page, pFlash.Bank);
 488              		.loc 1 355 9 is_stmt 1 view .LVU152
 355:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         FLASH_PageErase(pFlash.Page, pFlash.Bank);
 489              		.loc 1 355 15 is_stmt 0 view .LVU153
 490 00c4 5069     		ldr	r0, [r2, #20]
 355:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****         FLASH_PageErase(pFlash.Page, pFlash.Bank);
 491              		.loc 1 355 20 view .LVU154
 492 00c6 0130     		adds	r0, r0, #1
 493 00c8 5061     		str	r0, [r2, #20]
 356:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       }
 494              		.loc 1 356 9 is_stmt 1 view .LVU155
 495 00ca 1169     		ldr	r1, [r2, #16]
 496 00cc FFF7FEFF 		bl	FLASH_PageErase
 497              	.LVL37:
 498 00d0 CAE7     		b	.L20
 499              	.L32:
 500 00d2 00BF     		.align	2
 501              	.L31:
 502 00d4 00200240 		.word	1073881088
 503 00d8 00000000 		.word	pFlash
 504              		.cfi_endproc
 505              	.LFE159:
 507              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 508              		.align	1
 509              		.global	HAL_FLASH_Unlock
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	HAL_FLASH_Unlock:
 515              	.LFB162:
 446:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 516              		.loc 1 446 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 447:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 521              		.loc 1 447 3 view .LVU157
 522              	.LVL38:
 449:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 523              		.loc 1 449 3 view .LVU158
 449:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 524              		.loc 1 449 7 is_stmt 0 view .LVU159
 525 0000 094B     		ldr	r3, .L38
 526 0002 9B6A     		ldr	r3, [r3, #40]
 449:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 527              		.loc 1 449 6 view .LVU160
 528 0004 002B     		cmp	r3, #0
 529 0006 01DB     		blt	.L37
 447:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 530              		.loc 1 447 21 view .LVU161
 531 0008 0020     		movs	r0, #0
 532 000a 7047     		bx	lr
ARM GAS  /tmp/ccijsw6o.s 			page 47


 533              	.L37:
 452:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     WRITE_REG(FLASH->NSKEYR, FLASH_KEY2);
 534              		.loc 1 452 5 is_stmt 1 view .LVU162
 535 000c 064B     		ldr	r3, .L38
 536 000e 074A     		ldr	r2, .L38+4
 537 0010 9A60     		str	r2, [r3, #8]
 453:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 538              		.loc 1 453 5 view .LVU163
 539 0012 02F18832 		add	r2, r2, #-2004318072
 540 0016 9A60     		str	r2, [r3, #8]
 456:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 541              		.loc 1 456 5 view .LVU164
 456:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 542              		.loc 1 456 9 is_stmt 0 view .LVU165
 543 0018 9B6A     		ldr	r3, [r3, #40]
 456:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 544              		.loc 1 456 8 view .LVU166
 545 001a 002B     		cmp	r3, #0
 546 001c 01DB     		blt	.L36
 447:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 547              		.loc 1 447 21 view .LVU167
 548 001e 0020     		movs	r0, #0
 549 0020 7047     		bx	lr
 550              	.L36:
 458:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 551              		.loc 1 458 14 view .LVU168
 552 0022 0120     		movs	r0, #1
 553              	.LVL39:
 480:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 554              		.loc 1 480 3 is_stmt 1 view .LVU169
 481:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 555              		.loc 1 481 1 is_stmt 0 view .LVU170
 556 0024 7047     		bx	lr
 557              	.L39:
 558 0026 00BF     		.align	2
 559              	.L38:
 560 0028 00200240 		.word	1073881088
 561 002c 23016745 		.word	1164378403
 562              		.cfi_endproc
 563              	.LFE162:
 565              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 566              		.align	1
 567              		.global	HAL_FLASH_Lock
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	HAL_FLASH_Lock:
 573              	.LFB163:
 488:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 574              		.loc 1 488 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 489:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 579              		.loc 1 489 3 view .LVU172
 580              	.LVL40:
ARM GAS  /tmp/ccijsw6o.s 			page 48


 492:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 581              		.loc 1 492 3 view .LVU173
 582 0000 054B     		ldr	r3, .L43
 583 0002 9A6A     		ldr	r2, [r3, #40]
 584 0004 42F00042 		orr	r2, r2, #-2147483648
 585 0008 9A62     		str	r2, [r3, #40]
 495:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 586              		.loc 1 495 3 view .LVU174
 495:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 587              		.loc 1 495 7 is_stmt 0 view .LVU175
 588 000a 9B6A     		ldr	r3, [r3, #40]
 495:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 589              		.loc 1 495 6 view .LVU176
 590 000c 002B     		cmp	r3, #0
 591 000e 01DB     		blt	.L42
 489:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 592              		.loc 1 489 21 view .LVU177
 593 0010 0120     		movs	r0, #1
 594 0012 7047     		bx	lr
 595              	.L42:
 497:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 596              		.loc 1 497 12 view .LVU178
 597 0014 0020     		movs	r0, #0
 598              	.LVL41:
 513:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 599              		.loc 1 513 3 is_stmt 1 view .LVU179
 514:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 600              		.loc 1 514 1 is_stmt 0 view .LVU180
 601 0016 7047     		bx	lr
 602              	.L44:
 603              		.align	2
 604              	.L43:
 605 0018 00200240 		.word	1073881088
 606              		.cfi_endproc
 607              	.LFE163:
 609              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 610              		.align	1
 611              		.global	HAL_FLASH_OB_Unlock
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 616              	HAL_FLASH_OB_Unlock:
 617              	.LFB164:
 521:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   if (READ_BIT(FLASH->NSCR, FLASH_NSCR_OPTLOCK) != 0U)
 618              		.loc 1 521 1 is_stmt 1 view -0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 522:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 623              		.loc 1 522 3 view .LVU182
 522:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 624              		.loc 1 522 7 is_stmt 0 view .LVU183
 625 0000 0A4B     		ldr	r3, .L49
 626 0002 9B6A     		ldr	r3, [r3, #40]
 522:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 627              		.loc 1 522 6 view .LVU184
ARM GAS  /tmp/ccijsw6o.s 			page 49


 628 0004 13F0804F 		tst	r3, #1073741824
 629 0008 0BD0     		beq	.L47
 525:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 630              		.loc 1 525 5 is_stmt 1 view .LVU185
 631 000a 084B     		ldr	r3, .L49
 632 000c 084A     		ldr	r2, .L49+4
 633 000e 1A61     		str	r2, [r3, #16]
 526:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 634              		.loc 1 526 5 view .LVU186
 635 0010 02F14432 		add	r2, r2, #1145324612
 636 0014 1A61     		str	r2, [r3, #16]
 529:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 637              		.loc 1 529 5 view .LVU187
 529:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 638              		.loc 1 529 9 is_stmt 0 view .LVU188
 639 0016 9B6A     		ldr	r3, [r3, #40]
 529:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 640              		.loc 1 529 8 view .LVU189
 641 0018 13F0804F 		tst	r3, #1073741824
 642 001c 03D1     		bne	.L48
 535:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 643              		.loc 1 535 10 view .LVU190
 644 001e 0020     		movs	r0, #0
 645 0020 7047     		bx	lr
 646              	.L47:
 647 0022 0020     		movs	r0, #0
 648 0024 7047     		bx	lr
 649              	.L48:
 531:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 650              		.loc 1 531 14 view .LVU191
 651 0026 0120     		movs	r0, #1
 536:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 652              		.loc 1 536 1 view .LVU192
 653 0028 7047     		bx	lr
 654              	.L50:
 655 002a 00BF     		.align	2
 656              	.L49:
 657 002c 00200240 		.word	1073881088
 658 0030 3B2A1908 		.word	135866939
 659              		.cfi_endproc
 660              	.LFE164:
 662              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 663              		.align	1
 664              		.global	HAL_FLASH_OB_Lock
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 669              	HAL_FLASH_OB_Lock:
 670              	.LFB165:
 543:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 671              		.loc 1 543 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              		@ link register save eliminated.
 545:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 676              		.loc 1 545 3 view .LVU194
ARM GAS  /tmp/ccijsw6o.s 			page 50


 677 0000 064B     		ldr	r3, .L54
 678 0002 9A6A     		ldr	r2, [r3, #40]
 679 0004 42F08042 		orr	r2, r2, #1073741824
 680 0008 9A62     		str	r2, [r3, #40]
 548:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 681              		.loc 1 548 3 view .LVU195
 548:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 682              		.loc 1 548 7 is_stmt 0 view .LVU196
 683 000a 9B6A     		ldr	r3, [r3, #40]
 548:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 684              		.loc 1 548 6 view .LVU197
 685 000c 13F0804F 		tst	r3, #1073741824
 686 0010 01D1     		bne	.L53
 553:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 687              		.loc 1 553 10 view .LVU198
 688 0012 0120     		movs	r0, #1
 689 0014 7047     		bx	lr
 690              	.L53:
 550:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 691              		.loc 1 550 12 view .LVU199
 692 0016 0020     		movs	r0, #0
 554:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 693              		.loc 1 554 1 view .LVU200
 694 0018 7047     		bx	lr
 695              	.L55:
 696 001a 00BF     		.align	2
 697              	.L54:
 698 001c 00200240 		.word	1073881088
 699              		.cfi_endproc
 700              	.LFE165:
 702              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 703              		.align	1
 704              		.global	HAL_FLASH_OB_Launch
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 709              	HAL_FLASH_OB_Launch:
 710              	.LFB166:
 561:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 711              		.loc 1 561 1 is_stmt 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 563:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 716              		.loc 1 563 3 view .LVU202
 717 0000 034A     		ldr	r2, .L57
 718 0002 936A     		ldr	r3, [r2, #40]
 719 0004 43F00063 		orr	r3, r3, #134217728
 720 0008 9362     		str	r3, [r2, #40]
 567:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 721              		.loc 1 567 3 view .LVU203
 568:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 722              		.loc 1 568 1 is_stmt 0 view .LVU204
 723 000a 0120     		movs	r0, #1
 724 000c 7047     		bx	lr
 725              	.L58:
ARM GAS  /tmp/ccijsw6o.s 			page 51


 726 000e 00BF     		.align	2
 727              	.L57:
 728 0010 00200240 		.word	1073881088
 729              		.cfi_endproc
 730              	.LFE166:
 732              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 733              		.align	1
 734              		.global	HAL_FLASH_GetError
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 739              	HAL_FLASH_GetError:
 740              	.LFB167:
 601:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   return pFlash.ErrorCode;
 741              		.loc 1 601 1 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 602:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 746              		.loc 1 602 3 view .LVU206
 603:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 747              		.loc 1 603 1 is_stmt 0 view .LVU207
 748 0000 014B     		ldr	r3, .L60
 749 0002 5868     		ldr	r0, [r3, #4]
 750 0004 7047     		bx	lr
 751              	.L61:
 752 0006 00BF     		.align	2
 753              	.L60:
 754 0008 00000000 		.word	pFlash
 755              		.cfi_endproc
 756              	.LFE167:
 758              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 759              		.align	1
 760              		.global	FLASH_WaitForLastOperation
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 765              	FLASH_WaitForLastOperation:
 766              	.LVL42:
 767              	.LFB168:
 625:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY and WDW flags to be reset.
 768              		.loc 1 625 1 is_stmt 1 view -0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 625:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY and WDW flags to be reset.
 772              		.loc 1 625 1 is_stmt 0 view .LVU209
 773 0000 38B5     		push	{r3, r4, r5, lr}
 774              	.LCFI1:
 775              		.cfi_def_cfa_offset 16
 776              		.cfi_offset 3, -16
 777              		.cfi_offset 4, -12
 778              		.cfi_offset 5, -8
 779              		.cfi_offset 14, -4
 780 0002 0446     		mov	r4, r0
 629:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t error;
ARM GAS  /tmp/ccijsw6o.s 			page 52


 781              		.loc 1 629 3 is_stmt 1 view .LVU210
 629:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t error;
 782              		.loc 1 629 22 is_stmt 0 view .LVU211
 783 0004 FFF7FEFF 		bl	HAL_GetTick
 784              	.LVL43:
 629:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   uint32_t error;
 785              		.loc 1 629 12 view .LVU212
 786 0008 0519     		adds	r5, r0, r4
 787              	.LVL44:
 630:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_sr;
 788              		.loc 1 630 3 is_stmt 1 view .LVU213
 631:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 789              		.loc 1 631 3 view .LVU214
 634:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 790              		.loc 1 634 3 view .LVU215
 636:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 791              		.loc 1 636 3 view .LVU216
 792              	.L64:
 636:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 793              		.loc 1 636 58 view .LVU217
 636:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 794              		.loc 1 636 12 is_stmt 0 view .LVU218
 795 000a 144B     		ldr	r3, .L73
 796 000c 1B6A     		ldr	r3, [r3, #32]
 636:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 797              		.loc 1 636 58 view .LVU219
 798 000e 13F4403F 		tst	r3, #196608
 799 0012 08D0     		beq	.L71
 638:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 800              		.loc 1 638 5 is_stmt 1 view .LVU220
 638:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 801              		.loc 1 638 8 is_stmt 0 view .LVU221
 802 0014 B4F1FF3F 		cmp	r4, #-1
 803 0018 F7D0     		beq	.L64
 640:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       {
 804              		.loc 1 640 7 is_stmt 1 view .LVU222
 640:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       {
 805              		.loc 1 640 11 is_stmt 0 view .LVU223
 806 001a FFF7FEFF 		bl	HAL_GetTick
 807              	.LVL45:
 640:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       {
 808              		.loc 1 640 10 view .LVU224
 809 001e A842     		cmp	r0, r5
 810 0020 F3D3     		bcc	.L64
 642:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****       }
 811              		.loc 1 642 16 view .LVU225
 812 0022 0320     		movs	r0, #3
 813 0024 16E0     		b	.L65
 814              	.L71:
 648:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 815              		.loc 1 648 3 is_stmt 1 view .LVU226
 648:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 816              		.loc 1 648 13 is_stmt 0 view .LVU227
 817 0026 0D4B     		ldr	r3, .L73
 818 0028 1B6A     		ldr	r3, [r3, #32]
 648:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 819              		.loc 1 648 9 view .LVU228
ARM GAS  /tmp/ccijsw6o.s 			page 53


 820 002a 42F2FA02 		movw	r2, #8442
 821              	.LVL46:
 653:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 822              		.loc 1 653 3 is_stmt 1 view .LVU229
 653:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 823              		.loc 1 653 6 is_stmt 0 view .LVU230
 824 002e 1340     		ands	r3, r3, r2
 825              	.LVL47:
 653:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 826              		.loc 1 653 6 view .LVU231
 827 0030 09D1     		bne	.L72
 671:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 828              		.loc 1 671 3 is_stmt 1 view .LVU232
 671:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 829              		.loc 1 671 9 is_stmt 0 view .LVU233
 830 0032 0A4B     		ldr	r3, .L73
 831              	.LVL48:
 671:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 832              		.loc 1 671 9 view .LVU234
 833 0034 1B6A     		ldr	r3, [r3, #32]
 671:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 834              		.loc 1 671 6 view .LVU235
 835 0036 13F0010F 		tst	r3, #1
 836 003a 0CD0     		beq	.L69
 674:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 837              		.loc 1 674 5 is_stmt 1 view .LVU236
 674:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 838              		.loc 1 674 15 is_stmt 0 view .LVU237
 839 003c 074B     		ldr	r3, .L73
 840 003e 0122     		movs	r2, #1
 841 0040 1A62     		str	r2, [r3, #32]
 678:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 842              		.loc 1 678 10 view .LVU238
 843 0042 0020     		movs	r0, #0
 844 0044 06E0     		b	.L65
 845              	.LVL49:
 846              	.L72:
 656:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 847              		.loc 1 656 5 is_stmt 1 view .LVU239
 656:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 848              		.loc 1 656 11 is_stmt 0 view .LVU240
 849 0046 0649     		ldr	r1, .L73+4
 850 0048 4A68     		ldr	r2, [r1, #4]
 656:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 851              		.loc 1 656 22 view .LVU241
 852 004a 1A43     		orrs	r2, r2, r3
 853 004c 4A60     		str	r2, [r1, #4]
 659:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 854              		.loc 1 659 5 is_stmt 1 view .LVU242
 659:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 855              		.loc 1 659 15 is_stmt 0 view .LVU243
 856 004e 034A     		ldr	r2, .L73
 857 0050 1362     		str	r3, [r2, #32]
 667:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 858              		.loc 1 667 5 is_stmt 1 view .LVU244
 667:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 859              		.loc 1 667 12 is_stmt 0 view .LVU245
ARM GAS  /tmp/ccijsw6o.s 			page 54


 860 0052 0120     		movs	r0, #1
 861              	.LVL50:
 862              	.L65:
 679:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 863              		.loc 1 679 1 view .LVU246
 864 0054 38BD     		pop	{r3, r4, r5, pc}
 865              	.LVL51:
 866              	.L69:
 678:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 867              		.loc 1 678 10 view .LVU247
 868 0056 0020     		movs	r0, #0
 869 0058 FCE7     		b	.L65
 870              	.L74:
 871 005a 00BF     		.align	2
 872              	.L73:
 873 005c 00200240 		.word	1073881088
 874 0060 00000000 		.word	pFlash
 875              		.cfi_endproc
 876              	.LFE168:
 878              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 879              		.align	1
 880              		.global	HAL_FLASH_Program
 881              		.syntax unified
 882              		.thumb
 883              		.thumb_func
 885              	HAL_FLASH_Program:
 886              	.LVL52:
 887              	.LFB157:
 163:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 888              		.loc 1 163 1 is_stmt 1 view -0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 164:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
 892              		.loc 1 164 3 view .LVU249
 165:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 893              		.loc 1 165 3 view .LVU250
 168:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 894              		.loc 1 168 3 view .LVU251
 171:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 895              		.loc 1 171 3 view .LVU252
 171:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 896              		.loc 1 171 3 view .LVU253
 897 0000 174B     		ldr	r3, .L86
 898 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 899 0004 012B     		cmp	r3, #1
 900 0006 29D0     		beq	.L80
 163:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 901              		.loc 1 163 1 is_stmt 0 discriminator 2 view .LVU254
 902 0008 70B5     		push	{r4, r5, r6, lr}
 903              	.LCFI2:
 904              		.cfi_def_cfa_offset 16
 905              		.cfi_offset 4, -16
 906              		.cfi_offset 5, -12
 907              		.cfi_offset 6, -8
 908              		.cfi_offset 14, -4
 909 000a 0446     		mov	r4, r0
ARM GAS  /tmp/ccijsw6o.s 			page 55


 910 000c 0D46     		mov	r5, r1
 911 000e 1646     		mov	r6, r2
 171:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 912              		.loc 1 171 3 is_stmt 1 discriminator 2 view .LVU255
 913 0010 134B     		ldr	r3, .L86
 914 0012 0122     		movs	r2, #1
 915              	.LVL53:
 171:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 916              		.loc 1 171 3 is_stmt 0 discriminator 2 view .LVU256
 917 0014 1A70     		strb	r2, [r3]
 171:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 918              		.loc 1 171 3 is_stmt 1 discriminator 2 view .LVU257
 174:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 919              		.loc 1 174 3 discriminator 2 view .LVU258
 174:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 920              		.loc 1 174 20 is_stmt 0 discriminator 2 view .LVU259
 921 0016 0022     		movs	r2, #0
 922 0018 5A60     		str	r2, [r3, #4]
 177:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 923              		.loc 1 177 3 is_stmt 1 discriminator 2 view .LVU260
 177:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 924              		.loc 1 177 12 is_stmt 0 discriminator 2 view .LVU261
 925 001a 4FF47A70 		mov	r0, #1000
 926              	.LVL54:
 177:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 927              		.loc 1 177 12 discriminator 2 view .LVU262
 928 001e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 929              	.LVL55:
 179:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 930              		.loc 1 179 3 is_stmt 1 discriminator 2 view .LVU263
 179:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 931              		.loc 1 179 6 is_stmt 0 discriminator 2 view .LVU264
 932 0022 90B9     		cbnz	r0, .L77
 182:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 933              		.loc 1 182 5 is_stmt 1 view .LVU265
 182:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 934              		.loc 1 182 29 is_stmt 0 view .LVU266
 935 0024 0E4B     		ldr	r3, .L86
 936 0026 9C60     		str	r4, [r3, #8]
 185:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 937              		.loc 1 185 5 is_stmt 1 view .LVU267
 938              	.LVL56:
 187:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 939              		.loc 1 187 5 view .LVU268
 187:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 940              		.loc 1 187 22 is_stmt 0 view .LVU269
 941 0028 24F00044 		bic	r4, r4, #-2147483648
 942              	.LVL57:
 187:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 943              		.loc 1 187 8 view .LVU270
 944 002c 012C     		cmp	r4, #1
 945 002e 10D0     		beq	.L85
 195:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 946              		.loc 1 195 7 is_stmt 1 view .LVU271
 947 0030 3146     		mov	r1, r6
 948 0032 2846     		mov	r0, r5
 949              	.LVL58:
ARM GAS  /tmp/ccijsw6o.s 			page 56


 195:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 950              		.loc 1 195 7 is_stmt 0 view .LVU272
 951 0034 FFF7FEFF 		bl	FLASH_Program_Burst
 952              	.LVL59:
 953              	.L79:
 199:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 954              		.loc 1 199 5 is_stmt 1 view .LVU273
 199:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 955              		.loc 1 199 14 is_stmt 0 view .LVU274
 956 0038 4FF47A70 		mov	r0, #1000
 957 003c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 958              	.LVL60:
 202:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 959              		.loc 1 202 5 is_stmt 1 view .LVU275
 960 0040 084A     		ldr	r2, .L86+4
 961 0042 936A     		ldr	r3, [r2, #40]
 962 0044 23EA0403 		bic	r3, r3, r4
 963 0048 9362     		str	r3, [r2, #40]
 964              	.LVL61:
 965              	.L77:
 206:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 966              		.loc 1 206 3 view .LVU276
 206:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 967              		.loc 1 206 3 view .LVU277
 968 004a 054B     		ldr	r3, .L86
 969 004c 0022     		movs	r2, #0
 970 004e 1A70     		strb	r2, [r3]
 206:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 971              		.loc 1 206 3 view .LVU278
 209:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** }
 972              		.loc 1 209 3 view .LVU279
 210:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 973              		.loc 1 210 1 is_stmt 0 view .LVU280
 974 0050 70BD     		pop	{r4, r5, r6, pc}
 975              	.LVL62:
 976              	.L85:
 190:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 977              		.loc 1 190 7 is_stmt 1 view .LVU281
 978 0052 3146     		mov	r1, r6
 979 0054 2846     		mov	r0, r5
 980              	.LVL63:
 190:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 981              		.loc 1 190 7 is_stmt 0 view .LVU282
 982 0056 FFF7FEFF 		bl	FLASH_Program_QuadWord
 983              	.LVL64:
 190:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 984              		.loc 1 190 7 view .LVU283
 985 005a EDE7     		b	.L79
 986              	.LVL65:
 987              	.L80:
 988              	.LCFI3:
 989              		.cfi_def_cfa_offset 0
 990              		.cfi_restore 4
 991              		.cfi_restore 5
 992              		.cfi_restore 6
 993              		.cfi_restore 14
 171:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
ARM GAS  /tmp/ccijsw6o.s 			page 57


 994              		.loc 1 171 3 view .LVU284
 995 005c 0220     		movs	r0, #2
 996              	.LVL66:
 210:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 997              		.loc 1 210 1 view .LVU285
 998 005e 7047     		bx	lr
 999              	.L87:
 1000              		.align	2
 1001              	.L86:
 1002 0060 00000000 		.word	pFlash
 1003 0064 00200240 		.word	1073881088
 1004              		.cfi_endproc
 1005              	.LFE157:
 1007              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 1008              		.align	1
 1009              		.global	HAL_FLASH_Program_IT
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1014              	HAL_FLASH_Program_IT:
 1015              	.LVL67:
 1016              	.LFB158:
 224:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1017              		.loc 1 224 1 is_stmt 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 224:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1021              		.loc 1 224 1 is_stmt 0 view .LVU287
 1022 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1023              	.LCFI4:
 1024              		.cfi_def_cfa_offset 24
 1025              		.cfi_offset 3, -24
 1026              		.cfi_offset 4, -20
 1027              		.cfi_offset 5, -16
 1028              		.cfi_offset 6, -12
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 225:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   __IO uint32_t *reg_cr;
 1031              		.loc 1 225 3 is_stmt 1 view .LVU288
 226:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1032              		.loc 1 226 3 view .LVU289
 229:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1033              		.loc 1 229 3 view .LVU290
 232:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1034              		.loc 1 232 3 view .LVU291
 232:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1035              		.loc 1 232 3 view .LVU292
 1036 0002 174B     		ldr	r3, .L95
 1037 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1038 0006 012B     		cmp	r3, #1
 1039 0008 28D0     		beq	.L92
 1040 000a 0446     		mov	r4, r0
 1041 000c 0D46     		mov	r5, r1
 1042 000e 1646     		mov	r6, r2
 232:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1043              		.loc 1 232 3 discriminator 2 view .LVU293
ARM GAS  /tmp/ccijsw6o.s 			page 58


 1044 0010 134B     		ldr	r3, .L95
 1045 0012 0122     		movs	r2, #1
 1046              	.LVL68:
 232:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1047              		.loc 1 232 3 is_stmt 0 discriminator 2 view .LVU294
 1048 0014 1A70     		strb	r2, [r3]
 232:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1049              		.loc 1 232 3 is_stmt 1 discriminator 2 view .LVU295
 235:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1050              		.loc 1 235 3 discriminator 2 view .LVU296
 235:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1051              		.loc 1 235 20 is_stmt 0 discriminator 2 view .LVU297
 1052 0016 0022     		movs	r2, #0
 1053 0018 5A60     		str	r2, [r3, #4]
 238:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1054              		.loc 1 238 3 is_stmt 1 discriminator 2 view .LVU298
 238:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1055              		.loc 1 238 12 is_stmt 0 discriminator 2 view .LVU299
 1056 001a 4FF47A70 		mov	r0, #1000
 1057              	.LVL69:
 238:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1058              		.loc 1 238 12 discriminator 2 view .LVU300
 1059 001e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1060              	.LVL70:
 240:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 1061              		.loc 1 240 3 is_stmt 1 discriminator 2 view .LVU301
 240:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   {
 1062              		.loc 1 240 6 is_stmt 0 discriminator 2 view .LVU302
 1063 0022 0746     		mov	r7, r0
 1064 0024 20B1     		cbz	r0, .L90
 243:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 1065              		.loc 1 243 5 is_stmt 1 view .LVU303
 243:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 1066              		.loc 1 243 5 view .LVU304
 1067 0026 0E4B     		ldr	r3, .L95
 1068 0028 0022     		movs	r2, #0
 1069 002a 1A70     		strb	r2, [r3]
 243:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****   }
 1070              		.loc 1 243 5 view .LVU305
 1071              	.LVL71:
 1072              	.L89:
 270:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1073              		.loc 1 270 1 is_stmt 0 view .LVU306
 1074 002c 3846     		mov	r0, r7
 1075 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1076              	.LVL72:
 1077              	.L90:
 248:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     pFlash.Address = Address;
 1078              		.loc 1 248 5 is_stmt 1 view .LVU307
 248:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     pFlash.Address = Address;
 1079              		.loc 1 248 29 is_stmt 0 view .LVU308
 1080 0030 0B4B     		ldr	r3, .L95
 1081 0032 9C60     		str	r4, [r3, #8]
 249:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1082              		.loc 1 249 5 is_stmt 1 view .LVU309
 249:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1083              		.loc 1 249 20 is_stmt 0 view .LVU310
ARM GAS  /tmp/ccijsw6o.s 			page 59


 1084 0034 DD60     		str	r5, [r3, #12]
 252:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1085              		.loc 1 252 5 is_stmt 1 view .LVU311
 1086              	.LVL73:
 255:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1087              		.loc 1 255 5 view .LVU312
 255:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1088              		.loc 1 255 6 is_stmt 0 view .LVU313
 1089 0036 0B4A     		ldr	r2, .L95+4
 1090 0038 936A     		ldr	r3, [r2, #40]
 255:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1091              		.loc 1 255 15 view .LVU314
 1092 003a 43F04073 		orr	r3, r3, #50331648
 1093 003e 9362     		str	r3, [r2, #40]
 257:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 1094              		.loc 1 257 5 is_stmt 1 view .LVU315
 257:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 1095              		.loc 1 257 22 is_stmt 0 view .LVU316
 1096 0040 24F00044 		bic	r4, r4, #-2147483648
 1097              	.LVL74:
 257:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     {
 1098              		.loc 1 257 8 view .LVU317
 1099 0044 012C     		cmp	r4, #1
 1100 0046 04D0     		beq	.L94
 265:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 1101              		.loc 1 265 7 is_stmt 1 view .LVU318
 1102 0048 3146     		mov	r1, r6
 1103 004a 2846     		mov	r0, r5
 1104              	.LVL75:
 265:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 1105              		.loc 1 265 7 is_stmt 0 view .LVU319
 1106 004c FFF7FEFF 		bl	FLASH_Program_Burst
 1107              	.LVL76:
 265:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 1108              		.loc 1 265 7 view .LVU320
 1109 0050 ECE7     		b	.L89
 1110              	.LVL77:
 1111              	.L94:
 260:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 1112              		.loc 1 260 7 is_stmt 1 view .LVU321
 1113 0052 3146     		mov	r1, r6
 1114 0054 2846     		mov	r0, r5
 1115              	.LVL78:
 260:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 1116              		.loc 1 260 7 is_stmt 0 view .LVU322
 1117 0056 FFF7FEFF 		bl	FLASH_Program_QuadWord
 1118              	.LVL79:
 260:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c ****     }
 1119              		.loc 1 260 7 view .LVU323
 1120 005a E7E7     		b	.L89
 1121              	.LVL80:
 1122              	.L92:
 232:Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_hal_flash.c **** 
 1123              		.loc 1 232 3 view .LVU324
 1124 005c 0227     		movs	r7, #2
 1125 005e E5E7     		b	.L89
 1126              	.L96:
ARM GAS  /tmp/ccijsw6o.s 			page 60


 1127              		.align	2
 1128              	.L95:
 1129 0060 00000000 		.word	pFlash
 1130 0064 00200240 		.word	1073881088
 1131              		.cfi_endproc
 1132              	.LFE158:
 1134              		.global	pFlash
 1135              		.section	.data.pFlash,"aw"
 1136              		.align	2
 1139              	pFlash:
 1140 0000 00       		.byte	0
 1141 0001 000000   		.space	3
 1142 0004 00000000 		.word	0
 1143 0008 00000000 		.word	0
 1144 000c 00000000 		.word	0
 1145 0010 01000000 		.word	1
 1146 0014 00000000 		.word	0
 1147 0018 00000000 		.word	0
 1148              		.text
 1149              	.Letext0:
 1150              		.file 3 "/opt/st/stm32cubeide_1.16.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 1151              		.file 4 "/opt/st/stm32cubeide_1.16.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 1152              		.file 5 "Drivers/CMSIS/Device/ST/STM32U5xx/Include/stm32u575xx.h"
 1153              		.file 6 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_def.h"
 1154              		.file 7 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_flash.h"
 1155              		.file 8 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal.h"
 1156              		.file 9 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_flash_ex.h"
ARM GAS  /tmp/ccijsw6o.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 stm32u5xx_hal_flash.c
     /tmp/ccijsw6o.s:22     .text.FLASH_Program_QuadWord:00000000 $t
     /tmp/ccijsw6o.s:27     .text.FLASH_Program_QuadWord:00000000 FLASH_Program_QuadWord
     /tmp/ccijsw6o.s:125    .text.FLASH_Program_QuadWord:00000028 $d
     /tmp/ccijsw6o.s:130    .text.FLASH_Program_Burst:00000000 $t
     /tmp/ccijsw6o.s:135    .text.FLASH_Program_Burst:00000000 FLASH_Program_Burst
     /tmp/ccijsw6o.s:233    .text.FLASH_Program_Burst:0000002c $d
     /tmp/ccijsw6o.s:238    .text.HAL_FLASH_EndOfOperationCallback:00000000 $t
     /tmp/ccijsw6o.s:244    .text.HAL_FLASH_EndOfOperationCallback:00000000 HAL_FLASH_EndOfOperationCallback
     /tmp/ccijsw6o.s:259    .text.HAL_FLASH_OperationErrorCallback:00000000 $t
     /tmp/ccijsw6o.s:265    .text.HAL_FLASH_OperationErrorCallback:00000000 HAL_FLASH_OperationErrorCallback
     /tmp/ccijsw6o.s:280    .text.HAL_FLASH_IRQHandler:00000000 $t
     /tmp/ccijsw6o.s:286    .text.HAL_FLASH_IRQHandler:00000000 HAL_FLASH_IRQHandler
     /tmp/ccijsw6o.s:502    .text.HAL_FLASH_IRQHandler:000000d4 $d
     /tmp/ccijsw6o.s:1139   .data.pFlash:00000000 pFlash
     /tmp/ccijsw6o.s:508    .text.HAL_FLASH_Unlock:00000000 $t
     /tmp/ccijsw6o.s:514    .text.HAL_FLASH_Unlock:00000000 HAL_FLASH_Unlock
     /tmp/ccijsw6o.s:560    .text.HAL_FLASH_Unlock:00000028 $d
     /tmp/ccijsw6o.s:566    .text.HAL_FLASH_Lock:00000000 $t
     /tmp/ccijsw6o.s:572    .text.HAL_FLASH_Lock:00000000 HAL_FLASH_Lock
     /tmp/ccijsw6o.s:605    .text.HAL_FLASH_Lock:00000018 $d
     /tmp/ccijsw6o.s:610    .text.HAL_FLASH_OB_Unlock:00000000 $t
     /tmp/ccijsw6o.s:616    .text.HAL_FLASH_OB_Unlock:00000000 HAL_FLASH_OB_Unlock
     /tmp/ccijsw6o.s:657    .text.HAL_FLASH_OB_Unlock:0000002c $d
     /tmp/ccijsw6o.s:663    .text.HAL_FLASH_OB_Lock:00000000 $t
     /tmp/ccijsw6o.s:669    .text.HAL_FLASH_OB_Lock:00000000 HAL_FLASH_OB_Lock
     /tmp/ccijsw6o.s:698    .text.HAL_FLASH_OB_Lock:0000001c $d
     /tmp/ccijsw6o.s:703    .text.HAL_FLASH_OB_Launch:00000000 $t
     /tmp/ccijsw6o.s:709    .text.HAL_FLASH_OB_Launch:00000000 HAL_FLASH_OB_Launch
     /tmp/ccijsw6o.s:728    .text.HAL_FLASH_OB_Launch:00000010 $d
     /tmp/ccijsw6o.s:733    .text.HAL_FLASH_GetError:00000000 $t
     /tmp/ccijsw6o.s:739    .text.HAL_FLASH_GetError:00000000 HAL_FLASH_GetError
     /tmp/ccijsw6o.s:754    .text.HAL_FLASH_GetError:00000008 $d
     /tmp/ccijsw6o.s:759    .text.FLASH_WaitForLastOperation:00000000 $t
     /tmp/ccijsw6o.s:765    .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
     /tmp/ccijsw6o.s:873    .text.FLASH_WaitForLastOperation:0000005c $d
     /tmp/ccijsw6o.s:879    .text.HAL_FLASH_Program:00000000 $t
     /tmp/ccijsw6o.s:885    .text.HAL_FLASH_Program:00000000 HAL_FLASH_Program
     /tmp/ccijsw6o.s:1002   .text.HAL_FLASH_Program:00000060 $d
     /tmp/ccijsw6o.s:1008   .text.HAL_FLASH_Program_IT:00000000 $t
     /tmp/ccijsw6o.s:1014   .text.HAL_FLASH_Program_IT:00000000 HAL_FLASH_Program_IT
     /tmp/ccijsw6o.s:1129   .text.HAL_FLASH_Program_IT:00000060 $d
     /tmp/ccijsw6o.s:1136   .data.pFlash:00000000 $d

UNDEFINED SYMBOLS
FLASH_PageErase
HAL_GetTick
