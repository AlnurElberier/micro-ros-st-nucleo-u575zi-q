ARM GAS  /tmp/cc0p62r5.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"stm32u5xx_it.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Core/Src/stm32u5xx_it.c"
  21              		.section	.text.NMI_Handler,"ax",%progbits
  22              		.align	1
  23              		.global	NMI_Handler
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	NMI_Handler:
  29              	.LFB157:
   1:Core/Src/stm32u5xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32u5xx_it.c **** /**
   3:Core/Src/stm32u5xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32u5xx_it.c ****   * @file    stm32u5xx_it.c
   5:Core/Src/stm32u5xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32u5xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32u5xx_it.c ****   * @attention
   8:Core/Src/stm32u5xx_it.c ****   *
   9:Core/Src/stm32u5xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32u5xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32u5xx_it.c ****   *
  12:Core/Src/stm32u5xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32u5xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32u5xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32u5xx_it.c ****   *
  16:Core/Src/stm32u5xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32u5xx_it.c ****   */
  18:Core/Src/stm32u5xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32u5xx_it.c **** 
  20:Core/Src/stm32u5xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32u5xx_it.c **** #include "main.h"
  22:Core/Src/stm32u5xx_it.c **** #include "stm32u5xx_it.h"
  23:Core/Src/stm32u5xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32u5xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32u5xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32u5xx_it.c **** 
  27:Core/Src/stm32u5xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32u5xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32u5xx_it.c **** 
ARM GAS  /tmp/cc0p62r5.s 			page 2


  30:Core/Src/stm32u5xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32u5xx_it.c **** 
  32:Core/Src/stm32u5xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32u5xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32u5xx_it.c **** 
  35:Core/Src/stm32u5xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32u5xx_it.c **** 
  37:Core/Src/stm32u5xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32u5xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32u5xx_it.c **** 
  40:Core/Src/stm32u5xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32u5xx_it.c **** 
  42:Core/Src/stm32u5xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32u5xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32u5xx_it.c **** 
  45:Core/Src/stm32u5xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32u5xx_it.c **** 
  47:Core/Src/stm32u5xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32u5xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32u5xx_it.c **** 
  50:Core/Src/stm32u5xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32u5xx_it.c **** 
  52:Core/Src/stm32u5xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32u5xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32u5xx_it.c **** 
  55:Core/Src/stm32u5xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32u5xx_it.c **** 
  57:Core/Src/stm32u5xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32u5xx_it.c **** extern DMA_HandleTypeDef handle_GPDMA1_Channel11;
  59:Core/Src/stm32u5xx_it.c **** extern DMA_NodeTypeDef Node_GPDMA1_Channel10;
  60:Core/Src/stm32u5xx_it.c **** extern DMA_QListTypeDef List_GPDMA1_Channel10;
  61:Core/Src/stm32u5xx_it.c **** extern DMA_HandleTypeDef handle_GPDMA1_Channel10;
  62:Core/Src/stm32u5xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Core/Src/stm32u5xx_it.c **** extern TIM_HandleTypeDef htim17;
  64:Core/Src/stm32u5xx_it.c **** 
  65:Core/Src/stm32u5xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32u5xx_it.c **** 
  67:Core/Src/stm32u5xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32u5xx_it.c **** 
  69:Core/Src/stm32u5xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32u5xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32u5xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32u5xx_it.c **** /**
  73:Core/Src/stm32u5xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32u5xx_it.c ****   */
  75:Core/Src/stm32u5xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32u5xx_it.c **** {
  30              		.loc 1 76 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              	.L2:
  77:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32u5xx_it.c **** 
  79:Core/Src/stm32u5xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
ARM GAS  /tmp/cc0p62r5.s 			page 3


  80:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32u5xx_it.c ****    while (1)
  37              		.loc 1 81 4 discriminator 1 view .LVU1
  82:Core/Src/stm32u5xx_it.c ****   {
  83:Core/Src/stm32u5xx_it.c ****   }
  38              		.loc 1 83 3 discriminator 1 view .LVU2
  81:Core/Src/stm32u5xx_it.c ****   {
  39              		.loc 1 81 10 discriminator 1 view .LVU3
  40 0000 FEE7     		b	.L2
  41              		.cfi_endproc
  42              	.LFE157:
  44              		.section	.text.HardFault_Handler,"ax",%progbits
  45              		.align	1
  46              		.global	HardFault_Handler
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	HardFault_Handler:
  52              	.LFB158:
  84:Core/Src/stm32u5xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32u5xx_it.c **** }
  86:Core/Src/stm32u5xx_it.c **** 
  87:Core/Src/stm32u5xx_it.c **** /**
  88:Core/Src/stm32u5xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Core/Src/stm32u5xx_it.c ****   */
  90:Core/Src/stm32u5xx_it.c **** void HardFault_Handler(void)
  91:Core/Src/stm32u5xx_it.c **** {
  53              		.loc 1 91 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  92:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Core/Src/stm32u5xx_it.c **** 
  94:Core/Src/stm32u5xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Core/Src/stm32u5xx_it.c ****   while (1)
  60              		.loc 1 95 3 discriminator 1 view .LVU5
  96:Core/Src/stm32u5xx_it.c ****   {
  97:Core/Src/stm32u5xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Core/Src/stm32u5xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Core/Src/stm32u5xx_it.c ****   }
  61              		.loc 1 99 3 discriminator 1 view .LVU6
  95:Core/Src/stm32u5xx_it.c ****   {
  62              		.loc 1 95 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE158:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	MemManage_Handler:
  75              	.LFB159:
ARM GAS  /tmp/cc0p62r5.s 			page 4


 100:Core/Src/stm32u5xx_it.c **** }
 101:Core/Src/stm32u5xx_it.c **** 
 102:Core/Src/stm32u5xx_it.c **** /**
 103:Core/Src/stm32u5xx_it.c ****   * @brief This function handles Memory management fault.
 104:Core/Src/stm32u5xx_it.c ****   */
 105:Core/Src/stm32u5xx_it.c **** void MemManage_Handler(void)
 106:Core/Src/stm32u5xx_it.c **** {
  76              		.loc 1 106 1 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L6:
 107:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Core/Src/stm32u5xx_it.c **** 
 109:Core/Src/stm32u5xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Core/Src/stm32u5xx_it.c ****   while (1)
  83              		.loc 1 110 3 discriminator 1 view .LVU9
 111:Core/Src/stm32u5xx_it.c ****   {
 112:Core/Src/stm32u5xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32u5xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32u5xx_it.c ****   }
  84              		.loc 1 114 3 discriminator 1 view .LVU10
 110:Core/Src/stm32u5xx_it.c ****   {
  85              		.loc 1 110 9 discriminator 1 view .LVU11
  86 0000 FEE7     		b	.L6
  87              		.cfi_endproc
  88              	.LFE159:
  90              		.section	.text.BusFault_Handler,"ax",%progbits
  91              		.align	1
  92              		.global	BusFault_Handler
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	BusFault_Handler:
  98              	.LFB160:
 115:Core/Src/stm32u5xx_it.c **** }
 116:Core/Src/stm32u5xx_it.c **** 
 117:Core/Src/stm32u5xx_it.c **** /**
 118:Core/Src/stm32u5xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 119:Core/Src/stm32u5xx_it.c ****   */
 120:Core/Src/stm32u5xx_it.c **** void BusFault_Handler(void)
 121:Core/Src/stm32u5xx_it.c **** {
  99              		.loc 1 121 1 view -0
 100              		.cfi_startproc
 101              		@ Volatile: function does not return.
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.L8:
 122:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Core/Src/stm32u5xx_it.c **** 
 124:Core/Src/stm32u5xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Core/Src/stm32u5xx_it.c ****   while (1)
 106              		.loc 1 125 3 discriminator 1 view .LVU13
 126:Core/Src/stm32u5xx_it.c ****   {
ARM GAS  /tmp/cc0p62r5.s 			page 5


 127:Core/Src/stm32u5xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 128:Core/Src/stm32u5xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Core/Src/stm32u5xx_it.c ****   }
 107              		.loc 1 129 3 discriminator 1 view .LVU14
 125:Core/Src/stm32u5xx_it.c ****   {
 108              		.loc 1 125 9 discriminator 1 view .LVU15
 109 0000 FEE7     		b	.L8
 110              		.cfi_endproc
 111              	.LFE160:
 113              		.section	.text.UsageFault_Handler,"ax",%progbits
 114              		.align	1
 115              		.global	UsageFault_Handler
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 120              	UsageFault_Handler:
 121              	.LFB161:
 130:Core/Src/stm32u5xx_it.c **** }
 131:Core/Src/stm32u5xx_it.c **** 
 132:Core/Src/stm32u5xx_it.c **** /**
 133:Core/Src/stm32u5xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Core/Src/stm32u5xx_it.c ****   */
 135:Core/Src/stm32u5xx_it.c **** void UsageFault_Handler(void)
 136:Core/Src/stm32u5xx_it.c **** {
 122              		.loc 1 136 1 view -0
 123              		.cfi_startproc
 124              		@ Volatile: function does not return.
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.L10:
 137:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Core/Src/stm32u5xx_it.c **** 
 139:Core/Src/stm32u5xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Core/Src/stm32u5xx_it.c ****   while (1)
 129              		.loc 1 140 3 discriminator 1 view .LVU17
 141:Core/Src/stm32u5xx_it.c ****   {
 142:Core/Src/stm32u5xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32u5xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32u5xx_it.c ****   }
 130              		.loc 1 144 3 discriminator 1 view .LVU18
 140:Core/Src/stm32u5xx_it.c ****   {
 131              		.loc 1 140 9 discriminator 1 view .LVU19
 132 0000 FEE7     		b	.L10
 133              		.cfi_endproc
 134              	.LFE161:
 136              		.section	.text.DebugMon_Handler,"ax",%progbits
 137              		.align	1
 138              		.global	DebugMon_Handler
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	DebugMon_Handler:
 144              	.LFB162:
 145:Core/Src/stm32u5xx_it.c **** }
 146:Core/Src/stm32u5xx_it.c **** 
 147:Core/Src/stm32u5xx_it.c **** /**
ARM GAS  /tmp/cc0p62r5.s 			page 6


 148:Core/Src/stm32u5xx_it.c ****   * @brief This function handles Debug monitor.
 149:Core/Src/stm32u5xx_it.c ****   */
 150:Core/Src/stm32u5xx_it.c **** void DebugMon_Handler(void)
 151:Core/Src/stm32u5xx_it.c **** {
 145              		.loc 1 151 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 152:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 153:Core/Src/stm32u5xx_it.c **** 
 154:Core/Src/stm32u5xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 155:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 156:Core/Src/stm32u5xx_it.c **** 
 157:Core/Src/stm32u5xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 158:Core/Src/stm32u5xx_it.c **** }
 150              		.loc 1 158 1 view .LVU21
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE162:
 155              		.section	.text.USART1_IRQHandler,"ax",%progbits
 156              		.align	1
 157              		.global	USART1_IRQHandler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	USART1_IRQHandler:
 163              	.LFB163:
 159:Core/Src/stm32u5xx_it.c **** 
 160:Core/Src/stm32u5xx_it.c **** /******************************************************************************/
 161:Core/Src/stm32u5xx_it.c **** /* STM32U5xx Peripheral Interrupt Handlers                                    */
 162:Core/Src/stm32u5xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 163:Core/Src/stm32u5xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 164:Core/Src/stm32u5xx_it.c **** /* please refer to the startup file (startup_stm32u5xx.s).                    */
 165:Core/Src/stm32u5xx_it.c **** /******************************************************************************/
 166:Core/Src/stm32u5xx_it.c **** 
 167:Core/Src/stm32u5xx_it.c **** /**
 168:Core/Src/stm32u5xx_it.c ****   * @brief This function handles USART1 global interrupt.
 169:Core/Src/stm32u5xx_it.c ****   */
 170:Core/Src/stm32u5xx_it.c **** void USART1_IRQHandler(void)
 171:Core/Src/stm32u5xx_it.c **** {
 164              		.loc 1 171 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 08B5     		push	{r3, lr}
 169              	.LCFI0:
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 3, -8
 172              		.cfi_offset 14, -4
 172:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 173:Core/Src/stm32u5xx_it.c **** 
 174:Core/Src/stm32u5xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 175:Core/Src/stm32u5xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 173              		.loc 1 175 3 view .LVU23
 174 0002 0248     		ldr	r0, .L14
 175 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
ARM GAS  /tmp/cc0p62r5.s 			page 7


 176              	.LVL0:
 176:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 177:Core/Src/stm32u5xx_it.c **** 
 178:Core/Src/stm32u5xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 179:Core/Src/stm32u5xx_it.c **** }
 177              		.loc 1 179 1 is_stmt 0 view .LVU24
 178 0008 08BD     		pop	{r3, pc}
 179              	.L15:
 180 000a 00BF     		.align	2
 181              	.L14:
 182 000c 00000000 		.word	huart1
 183              		.cfi_endproc
 184              	.LFE163:
 186              		.section	.text.TIM17_IRQHandler,"ax",%progbits
 187              		.align	1
 188              		.global	TIM17_IRQHandler
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	TIM17_IRQHandler:
 194              	.LFB164:
 180:Core/Src/stm32u5xx_it.c **** 
 181:Core/Src/stm32u5xx_it.c **** /**
 182:Core/Src/stm32u5xx_it.c ****   * @brief This function handles TIM17 global interrupt.
 183:Core/Src/stm32u5xx_it.c ****   */
 184:Core/Src/stm32u5xx_it.c **** void TIM17_IRQHandler(void)
 185:Core/Src/stm32u5xx_it.c **** {
 195              		.loc 1 185 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 08B5     		push	{r3, lr}
 200              	.LCFI1:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
 186:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 0 */
 187:Core/Src/stm32u5xx_it.c **** 
 188:Core/Src/stm32u5xx_it.c ****   /* USER CODE END TIM17_IRQn 0 */
 189:Core/Src/stm32u5xx_it.c ****   HAL_TIM_IRQHandler(&htim17);
 204              		.loc 1 189 3 view .LVU26
 205 0002 0248     		ldr	r0, .L18
 206 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 207              	.LVL1:
 190:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 1 */
 191:Core/Src/stm32u5xx_it.c **** 
 192:Core/Src/stm32u5xx_it.c ****   /* USER CODE END TIM17_IRQn 1 */
 193:Core/Src/stm32u5xx_it.c **** }
 208              		.loc 1 193 1 is_stmt 0 view .LVU27
 209 0008 08BD     		pop	{r3, pc}
 210              	.L19:
 211 000a 00BF     		.align	2
 212              	.L18:
 213 000c 00000000 		.word	htim17
 214              		.cfi_endproc
 215              	.LFE164:
 217              		.section	.text.GPDMA1_Channel10_IRQHandler,"ax",%progbits
ARM GAS  /tmp/cc0p62r5.s 			page 8


 218              		.align	1
 219              		.global	GPDMA1_Channel10_IRQHandler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	GPDMA1_Channel10_IRQHandler:
 225              	.LFB165:
 194:Core/Src/stm32u5xx_it.c **** 
 195:Core/Src/stm32u5xx_it.c **** /**
 196:Core/Src/stm32u5xx_it.c ****   * @brief This function handles GPDMA1 Channel 10 global interrupt.
 197:Core/Src/stm32u5xx_it.c ****   */
 198:Core/Src/stm32u5xx_it.c **** void GPDMA1_Channel10_IRQHandler(void)
 199:Core/Src/stm32u5xx_it.c **** {
 226              		.loc 1 199 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI2:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 200:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN GPDMA1_Channel10_IRQn 0 */
 201:Core/Src/stm32u5xx_it.c **** 
 202:Core/Src/stm32u5xx_it.c ****   /* USER CODE END GPDMA1_Channel10_IRQn 0 */
 203:Core/Src/stm32u5xx_it.c ****   HAL_DMA_IRQHandler(&handle_GPDMA1_Channel10);
 235              		.loc 1 203 3 view .LVU29
 236 0002 0248     		ldr	r0, .L22
 237 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 238              	.LVL2:
 204:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN GPDMA1_Channel10_IRQn 1 */
 205:Core/Src/stm32u5xx_it.c **** 
 206:Core/Src/stm32u5xx_it.c ****   /* USER CODE END GPDMA1_Channel10_IRQn 1 */
 207:Core/Src/stm32u5xx_it.c **** }
 239              		.loc 1 207 1 is_stmt 0 view .LVU30
 240 0008 08BD     		pop	{r3, pc}
 241              	.L23:
 242 000a 00BF     		.align	2
 243              	.L22:
 244 000c 00000000 		.word	handle_GPDMA1_Channel10
 245              		.cfi_endproc
 246              	.LFE165:
 248              		.section	.text.GPDMA1_Channel11_IRQHandler,"ax",%progbits
 249              		.align	1
 250              		.global	GPDMA1_Channel11_IRQHandler
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	GPDMA1_Channel11_IRQHandler:
 256              	.LFB166:
 208:Core/Src/stm32u5xx_it.c **** 
 209:Core/Src/stm32u5xx_it.c **** /**
 210:Core/Src/stm32u5xx_it.c ****   * @brief This function handles GPDMA1 Channel 11 global interrupt.
 211:Core/Src/stm32u5xx_it.c ****   */
 212:Core/Src/stm32u5xx_it.c **** void GPDMA1_Channel11_IRQHandler(void)
 213:Core/Src/stm32u5xx_it.c **** {
 257              		.loc 1 213 1 is_stmt 1 view -0
ARM GAS  /tmp/cc0p62r5.s 			page 9


 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI3:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
 214:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN GPDMA1_Channel11_IRQn 0 */
 215:Core/Src/stm32u5xx_it.c **** 
 216:Core/Src/stm32u5xx_it.c ****   /* USER CODE END GPDMA1_Channel11_IRQn 0 */
 217:Core/Src/stm32u5xx_it.c ****   HAL_DMA_IRQHandler(&handle_GPDMA1_Channel11);
 266              		.loc 1 217 3 view .LVU32
 267 0002 0248     		ldr	r0, .L26
 268 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 269              	.LVL3:
 218:Core/Src/stm32u5xx_it.c ****   /* USER CODE BEGIN GPDMA1_Channel11_IRQn 1 */
 219:Core/Src/stm32u5xx_it.c **** 
 220:Core/Src/stm32u5xx_it.c ****   /* USER CODE END GPDMA1_Channel11_IRQn 1 */
 221:Core/Src/stm32u5xx_it.c **** }
 270              		.loc 1 221 1 is_stmt 0 view .LVU33
 271 0008 08BD     		pop	{r3, pc}
 272              	.L27:
 273 000a 00BF     		.align	2
 274              	.L26:
 275 000c 00000000 		.word	handle_GPDMA1_Channel11
 276              		.cfi_endproc
 277              	.LFE166:
 279              		.text
 280              	.Letext0:
 281              		.file 2 "/opt/st/stm32cubeide_1.16.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 282              		.file 3 "/opt/st/stm32cubeide_1.16.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 283              		.file 4 "Drivers/CMSIS/Device/ST/STM32U5xx/Include/stm32u575xx.h"
 284              		.file 5 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_def.h"
 285              		.file 6 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_dma.h"
 286              		.file 7 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_dma_ex.h"
 287              		.file 8 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_tim.h"
 288              		.file 9 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_uart.h"
ARM GAS  /tmp/cc0p62r5.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32u5xx_it.c
     /tmp/cc0p62r5.s:22     .text.NMI_Handler:00000000 $t
     /tmp/cc0p62r5.s:28     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/cc0p62r5.s:45     .text.HardFault_Handler:00000000 $t
     /tmp/cc0p62r5.s:51     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/cc0p62r5.s:68     .text.MemManage_Handler:00000000 $t
     /tmp/cc0p62r5.s:74     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/cc0p62r5.s:91     .text.BusFault_Handler:00000000 $t
     /tmp/cc0p62r5.s:97     .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/cc0p62r5.s:114    .text.UsageFault_Handler:00000000 $t
     /tmp/cc0p62r5.s:120    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/cc0p62r5.s:137    .text.DebugMon_Handler:00000000 $t
     /tmp/cc0p62r5.s:143    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/cc0p62r5.s:156    .text.USART1_IRQHandler:00000000 $t
     /tmp/cc0p62r5.s:162    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
     /tmp/cc0p62r5.s:182    .text.USART1_IRQHandler:0000000c $d
     /tmp/cc0p62r5.s:187    .text.TIM17_IRQHandler:00000000 $t
     /tmp/cc0p62r5.s:193    .text.TIM17_IRQHandler:00000000 TIM17_IRQHandler
     /tmp/cc0p62r5.s:213    .text.TIM17_IRQHandler:0000000c $d
     /tmp/cc0p62r5.s:218    .text.GPDMA1_Channel10_IRQHandler:00000000 $t
     /tmp/cc0p62r5.s:224    .text.GPDMA1_Channel10_IRQHandler:00000000 GPDMA1_Channel10_IRQHandler
     /tmp/cc0p62r5.s:244    .text.GPDMA1_Channel10_IRQHandler:0000000c $d
     /tmp/cc0p62r5.s:249    .text.GPDMA1_Channel11_IRQHandler:00000000 $t
     /tmp/cc0p62r5.s:255    .text.GPDMA1_Channel11_IRQHandler:00000000 GPDMA1_Channel11_IRQHandler
     /tmp/cc0p62r5.s:275    .text.GPDMA1_Channel11_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_UART_IRQHandler
huart1
HAL_TIM_IRQHandler
htim17
HAL_DMA_IRQHandler
handle_GPDMA1_Channel10
handle_GPDMA1_Channel11
